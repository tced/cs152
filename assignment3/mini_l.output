Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 beginparam: BEGIN_PARAMS

    5 endparam: END_PARAMS

    6 $@1: %empty

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    8 Declaration1: %empty
    9             | Declaration SEMICOLON Declaration1

   10 Declaration: identifier COLON TYPE

   11 Statement1: Statement SEMICOLON Statement1
   12           | Statement SEMICOLON

   13 identifier: IDENT
   14           | IDENT COMMA identifier

   15 TYPE: INTEGER
   16     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 Statement: assign_rule
   18          | If_rule
   19          | while_rule
   20          | do_while_rule
   21          | Read_in
   22          | write_rule
   23          | CONTINUE
   24          | RETURN expression

   25 assign_rule: IDENT ASSIGN expression
   26            | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

   27 if_clause: IF boolean_expr THEN

   28 else_if: if_clause Statement1 ELSE

   29 If_rule: if_clause Statement1 ENDIF
   30        | else_if Statement1 ENDIF

   31 while_key: WHILE

   32 while_clause: while_key boolean_expr BEGINLOOP

   33 while_rule: while_clause Statement1 ENDLOOP

   34 do_key: DO BEGINLOOP

   35 do_check: do_key Statement1 ENDLOOP

   36 do_while_rule: do_check WHILE boolean_expr

   37 read_mult: COMMA IDENT read_mult
   38          | COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult
   39          | %empty

   40 Read_in: READ IDENT read_mult
   41        | READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

   42 comma_mult: %empty
   43           | COMMA Normal comma_mult

   44 write_rule: WRITE Normal comma_mult

   45 boolean_expr: relation_exprr
   46             | boolean_expr OR relation_exprr

   47 relation_exprr: relation_expr
   48               | relation_exprr AND relation_expr

   49 relation_expr: rexpr
   50              | NOT rexpr

   51 rexpr: expression EQ expression
   52      | expression NEQ expression
   53      | expression LT expression
   54      | expression GT expression
   55      | expression LTE expression
   56      | expression GTE expression
   57      | TRUE
   58      | FALSE
   59      | L_PAREN boolean_expr R_PAREN

   60 expression: mul_expr expradd

   61 expradd: %empty
   62        | ADD mul_expr expradd
   63        | SUB mul_expr expradd

   64 mul_expr: term multi_term

   65 multi_term: %empty
   66           | MULT term multi_term
   67           | DIV term multi_term
   68           | MOD term multi_term

   69 term: Normal
   70     | SUB Normal
   71     | IDENT Term_1

   72 Term_1: L_PAREN Expression1 R_PAREN
   73       | L_PAREN R_PAREN

   74 Normal: var
   75       | NUMBER
   76       | L_PAREN expression R_PAREN

   77 Expression1: expression
   78            | expression COMMA Expression1

   79 var: IDENT
   80    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 7
BEGIN_PARAMS (259) 4
END_PARAMS (260) 5
BEGIN_BODY (261) 7
token (262)
END_BODY (263) 7
BEGIN_LOCALS (264) 7
END_LOCALS (265) 7
INTEGER (266) 15 16
ARRAY (267) 16
OF (268) 16
IF (269) 27
THEN (270) 27
ENDIF (271) 29 30
ELSE (272) 28
WHILE (273) 31 36
DO (274) 34
BEGINLOOP (275) 32 34
ENDLOOP (276) 33 35
CONTINUE (277) 23
READ (278) 40 41
WRITE (279) 44
TRUE (280) 57
FALSE (281) 58
AND (282) 48
OR (283) 46
NOT (284) 50
SEMICOLON (285) 7 9 11 12
COLON (286) 10
COMMA (287) 14 37 38 43 78
L_PAREN (288) 59 72 73 76
R_PAREN (289) 59 72 73 76
L_SQUARE_BRACKET (290) 16 26 38 41 80
R_SQUARE_BRACKET (291) 16 26 38 41 80
ASSIGN (292) 25 26
RETURN (293) 24
NUMBER (294) 16 75
IDENT (295) 7 13 14 25 26 37 38 40 41 71 79 80
MULT (296) 66
DIV (297) 67
MOD (298) 68
ADD (299) 62
SUB (300) 63 70
LT (301) 53
LTE (302) 55
GT (303) 54
GTE (304) 56
EQ (305) 51
NEQ (306) 52


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
beginparam (55)
    on left: 4, on right: 7
endparam (56)
    on left: 5, on right: 7
Function (57)
    on left: 7, on right: 3
$@1 (58)
    on left: 6, on right: 7
Declaration1 (59)
    on left: 8 9, on right: 7 9
Declaration (60)
    on left: 10, on right: 9
Statement1 (61)
    on left: 11 12, on right: 7 11 28 29 30 33 35
identifier (62)
    on left: 13 14, on right: 10 14
TYPE (63)
    on left: 15 16, on right: 10
Statement (64)
    on left: 17 18 19 20 21 22 23 24, on right: 11 12
assign_rule (65)
    on left: 25 26, on right: 17
if_clause (66)
    on left: 27, on right: 28 29
else_if (67)
    on left: 28, on right: 30
If_rule (68)
    on left: 29 30, on right: 18
while_key (69)
    on left: 31, on right: 32
while_clause (70)
    on left: 32, on right: 33
while_rule (71)
    on left: 33, on right: 19
do_key (72)
    on left: 34, on right: 35
do_check (73)
    on left: 35, on right: 36
do_while_rule (74)
    on left: 36, on right: 20
read_mult (75)
    on left: 37 38 39, on right: 37 38 40 41
Read_in (76)
    on left: 40 41, on right: 21
comma_mult (77)
    on left: 42 43, on right: 43 44
write_rule (78)
    on left: 44, on right: 22
boolean_expr (79)
    on left: 45 46, on right: 27 32 36 46 59
relation_exprr (80)
    on left: 47 48, on right: 45 46 48
relation_expr (81)
    on left: 49 50, on right: 47 48
rexpr (82)
    on left: 51 52 53 54 55 56 57 58 59, on right: 49 50
expression (83)
    on left: 60, on right: 24 25 26 38 41 51 52 53 54 55 56 76 77 78
    80
expradd (84)
    on left: 61 62 63, on right: 60 62 63
mul_expr (85)
    on left: 64, on right: 60 62 63
multi_term (86)
    on left: 65 66 67 68, on right: 64 66 67 68
term (87)
    on left: 69 70 71, on right: 64 66 67 68
Term_1 (88)
    on left: 72 73, on right: 71
Normal (89)
    on left: 74 75 76, on right: 43 44 69 70
Expression1 (90)
    on left: 77 78, on right: 72 78
var (91)
    on left: 79 80, on right: 74


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    7 Function: FUNCTION . IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 7
    Function   go to state 4


State 5

    7 Function: FUNCTION IDENT . $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 8

    7 Function: FUNCTION IDENT $@1 . SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    7 Function: FUNCTION IDENT $@1 SEMICOLON . beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    beginparam  go to state 11


State 10

    4 beginparam: BEGIN_PARAMS .

    $default  reduce using rule 4 (beginparam)


State 11

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam . Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 13
    Declaration   go to state 14
    identifier    go to state 15


State 12

   13 identifier: IDENT .
   14           | IDENT . COMMA identifier

    COMMA  shift, and go to state 16

    $default  reduce using rule 13 (identifier)


State 13

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 . endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 17

    endparam  go to state 18


State 14

    9 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 15

   10 Declaration: identifier . COLON TYPE

    COLON  shift, and go to state 20


State 16

   14 identifier: IDENT COMMA . identifier

    IDENT  shift, and go to state 12

    identifier  go to state 21


State 17

    5 endparam: END_PARAMS .

    $default  reduce using rule 5 (endparam)


State 18

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    9 Declaration1: Declaration SEMICOLON . Declaration1

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 14
    identifier    go to state 15


State 20

   10 Declaration: identifier COLON . TYPE

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    TYPE  go to state 26


State 21

   14 identifier: IDENT COMMA identifier .

    $default  reduce using rule 14 (identifier)


State 22

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 27
    Declaration   go to state 14
    identifier    go to state 15


State 23

    9 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 9 (Declaration1)


State 24

   15 TYPE: INTEGER .

    $default  reduce using rule 15 (TYPE)


State 25

   16 TYPE: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   10 Declaration: identifier COLON TYPE .

    $default  reduce using rule 10 (Declaration)


State 27

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   16 TYPE: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 41
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 32

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 55


State 33

   27 if_clause: IF . boolean_expr THEN

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    boolean_expr    go to state 63
    relation_exprr  go to state 64
    relation_expr   go to state 65
    rexpr           go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 34

   31 while_key: WHILE .

    $default  reduce using rule 31 (while_key)


State 35

   34 do_key: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 72


State 36

   23 Statement: CONTINUE .

    $default  reduce using rule 23 (Statement)


State 37

   40 Read_in: READ . IDENT read_mult
   41        | READ . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 73


State 38

   44 write_rule: WRITE . Normal comma_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 76
    var     go to state 71


State 39

   24 Statement: RETURN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 77
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 40

   25 assign_rule: IDENT . ASSIGN expression
   26            | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_SQUARE_BRACKET  shift, and go to state 78
    ASSIGN            shift, and go to state 79


State 41

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 80


State 42

   11 Statement1: Statement . SEMICOLON Statement1
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 43

   17 Statement: assign_rule .

    $default  reduce using rule 17 (Statement)


State 44

   28 else_if: if_clause . Statement1 ELSE
   29 If_rule: if_clause . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 82
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 45

   30 If_rule: else_if . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 83
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 46

   18 Statement: If_rule .

    $default  reduce using rule 18 (Statement)


State 47

   32 while_clause: while_key . boolean_expr BEGINLOOP

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    boolean_expr    go to state 84
    relation_exprr  go to state 64
    relation_expr   go to state 65
    rexpr           go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 48

   33 while_rule: while_clause . Statement1 ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 85
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 49

   19 Statement: while_rule .

    $default  reduce using rule 19 (Statement)


State 50

   35 do_check: do_key . Statement1 ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 86
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 51

   36 do_while_rule: do_check . WHILE boolean_expr

    WHILE  shift, and go to state 87


State 52

   20 Statement: do_while_rule .

    $default  reduce using rule 20 (Statement)


State 53

   21 Statement: Read_in .

    $default  reduce using rule 21 (Statement)


State 54

   22 Statement: write_rule .

    $default  reduce using rule 22 (Statement)


State 55

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 88


State 56

   57 rexpr: TRUE .

    $default  reduce using rule 57 (rexpr)


State 57

   58 rexpr: FALSE .

    $default  reduce using rule 58 (rexpr)


State 58

   50 relation_expr: NOT . rexpr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    rexpr       go to state 89
    expression  go to state 67
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 59

   59 rexpr: L_PAREN . boolean_expr R_PAREN
   76 Normal: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    boolean_expr    go to state 90
    relation_exprr  go to state 64
    relation_expr   go to state 65
    rexpr           go to state 66
    expression      go to state 91
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 60

   75 Normal: NUMBER .

    $default  reduce using rule 75 (Normal)


State 61

   71 term: IDENT . Term_1
   79 var: IDENT .
   80    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 92
    L_SQUARE_BRACKET  shift, and go to state 93

    $default  reduce using rule 79 (var)

    Term_1  go to state 94


State 62

   70 term: SUB . Normal

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 95
    var     go to state 71


State 63

   27 if_clause: IF boolean_expr . THEN
   46 boolean_expr: boolean_expr . OR relation_exprr

    THEN  shift, and go to state 96
    OR    shift, and go to state 97


State 64

   45 boolean_expr: relation_exprr .
   48 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 98

    $default  reduce using rule 45 (boolean_expr)


State 65

   47 relation_exprr: relation_expr .

    $default  reduce using rule 47 (relation_exprr)


State 66

   49 relation_expr: rexpr .

    $default  reduce using rule 49 (relation_expr)


State 67

   51 rexpr: expression . EQ expression
   52      | expression . NEQ expression
   53      | expression . LT expression
   54      | expression . GT expression
   55      | expression . LTE expression
   56      | expression . GTE expression

    LT   shift, and go to state 99
    LTE  shift, and go to state 100
    GT   shift, and go to state 101
    GTE  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104


State 68

   60 expression: mul_expr . expradd

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106

    $default  reduce using rule 61 (expradd)

    expradd  go to state 107


State 69

   64 mul_expr: term . multi_term

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 65 (multi_term)

    multi_term  go to state 111


State 70

   69 term: Normal .

    $default  reduce using rule 69 (term)


State 71

   74 Normal: var .

    $default  reduce using rule 74 (Normal)


State 72

   34 do_key: DO BEGINLOOP .

    $default  reduce using rule 34 (do_key)


State 73

   40 Read_in: READ IDENT . read_mult
   41        | READ IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 112
    L_SQUARE_BRACKET  shift, and go to state 113

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 114


State 74

   76 Normal: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 115
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 75

   79 var: IDENT .
   80    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 93

    $default  reduce using rule 79 (var)


State 76

   44 write_rule: WRITE Normal . comma_mult

    COMMA  shift, and go to state 116

    $default  reduce using rule 42 (comma_mult)

    comma_mult  go to state 117


State 77

   24 Statement: RETURN expression .

    $default  reduce using rule 24 (Statement)


State 78

   26 assign_rule: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 118
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 79

   25 assign_rule: IDENT ASSIGN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 119
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 80

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 7 (Function)


State 81

   11 Statement1: Statement SEMICOLON . Statement1
   12           | Statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 12 (Statement1)

    Statement1     go to state 120
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 82

   28 else_if: if_clause Statement1 . ELSE
   29 If_rule: if_clause Statement1 . ENDIF

    ENDIF  shift, and go to state 121
    ELSE   shift, and go to state 122


State 83

   30 If_rule: else_if Statement1 . ENDIF

    ENDIF  shift, and go to state 123


State 84

   32 while_clause: while_key boolean_expr . BEGINLOOP
   46 boolean_expr: boolean_expr . OR relation_exprr

    BEGINLOOP  shift, and go to state 124
    OR         shift, and go to state 97


State 85

   33 while_rule: while_clause Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 86

   35 do_check: do_key Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 87

   36 do_while_rule: do_check WHILE . boolean_expr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    boolean_expr    go to state 127
    relation_exprr  go to state 64
    relation_expr   go to state 65
    rexpr           go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 88

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (TYPE)


State 89

   50 relation_expr: NOT rexpr .

    $default  reduce using rule 50 (relation_expr)


State 90

   46 boolean_expr: boolean_expr . OR relation_exprr
   59 rexpr: L_PAREN boolean_expr . R_PAREN

    OR       shift, and go to state 97
    R_PAREN  shift, and go to state 128


State 91

   51 rexpr: expression . EQ expression
   52      | expression . NEQ expression
   53      | expression . LT expression
   54      | expression . GT expression
   55      | expression . LTE expression
   56      | expression . GTE expression
   76 Normal: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129
    LT       shift, and go to state 99
    LTE      shift, and go to state 100
    GT       shift, and go to state 101
    GTE      shift, and go to state 102
    EQ       shift, and go to state 103
    NEQ      shift, and go to state 104


State 92

   72 Term_1: L_PAREN . Expression1 R_PAREN
   73       | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 74
    R_PAREN  shift, and go to state 130
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression   go to state 131
    mul_expr     go to state 68
    term         go to state 69
    Normal       go to state 70
    Expression1  go to state 132
    var          go to state 71


State 93

   80 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 133
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 94

   71 term: IDENT Term_1 .

    $default  reduce using rule 71 (term)


State 95

   70 term: SUB Normal .

    $default  reduce using rule 70 (term)


State 96

   27 if_clause: IF boolean_expr THEN .

    $default  reduce using rule 27 (if_clause)


State 97

   46 boolean_expr: boolean_expr OR . relation_exprr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    relation_exprr  go to state 134
    relation_expr   go to state 65
    rexpr           go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 98

   48 relation_exprr: relation_exprr AND . relation_expr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    relation_expr  go to state 135
    rexpr          go to state 66
    expression     go to state 67
    mul_expr       go to state 68
    term           go to state 69
    Normal         go to state 70
    var            go to state 71


State 99

   53 rexpr: expression LT . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 136
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 100

   55 rexpr: expression LTE . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 137
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 101

   54 rexpr: expression GT . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 138
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 102

   56 rexpr: expression GTE . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 139
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 103

   51 rexpr: expression EQ . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 140
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 104

   52 rexpr: expression NEQ . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 141
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 105

   62 expradd: ADD . mul_expr expradd

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    mul_expr  go to state 142
    term      go to state 69
    Normal    go to state 70
    var       go to state 71


State 106

   63 expradd: SUB . mul_expr expradd

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    mul_expr  go to state 143
    term      go to state 69
    Normal    go to state 70
    var       go to state 71


State 107

   60 expression: mul_expr expradd .

    $default  reduce using rule 60 (expression)


State 108

   66 multi_term: MULT . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 144
    Normal  go to state 70
    var     go to state 71


State 109

   67 multi_term: DIV . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 145
    Normal  go to state 70
    var     go to state 71


State 110

   68 multi_term: MOD . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 146
    Normal  go to state 70
    var     go to state 71


State 111

   64 mul_expr: term multi_term .

    $default  reduce using rule 64 (mul_expr)


State 112

   37 read_mult: COMMA . IDENT read_mult
   38          | COMMA . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 147


State 113

   41 Read_in: READ IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 148
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 114

   40 Read_in: READ IDENT read_mult .

    $default  reduce using rule 40 (Read_in)


State 115

   76 Normal: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 116

   43 comma_mult: COMMA . Normal comma_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 149
    var     go to state 71


State 117

   44 write_rule: WRITE Normal comma_mult .

    $default  reduce using rule 44 (write_rule)


State 118

   26 assign_rule: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 150


State 119

   25 assign_rule: IDENT ASSIGN expression .

    $default  reduce using rule 25 (assign_rule)


State 120

   11 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 11 (Statement1)


State 121

   29 If_rule: if_clause Statement1 ENDIF .

    $default  reduce using rule 29 (If_rule)


State 122

   28 else_if: if_clause Statement1 ELSE .

    $default  reduce using rule 28 (else_if)


State 123

   30 If_rule: else_if Statement1 ENDIF .

    $default  reduce using rule 30 (If_rule)


State 124

   32 while_clause: while_key boolean_expr BEGINLOOP .

    $default  reduce using rule 32 (while_clause)


State 125

   33 while_rule: while_clause Statement1 ENDLOOP .

    $default  reduce using rule 33 (while_rule)


State 126

   35 do_check: do_key Statement1 ENDLOOP .

    $default  reduce using rule 35 (do_check)


State 127

   36 do_while_rule: do_check WHILE boolean_expr .
   46 boolean_expr: boolean_expr . OR relation_exprr

    OR  shift, and go to state 97

    $default  reduce using rule 36 (do_while_rule)


State 128

   59 rexpr: L_PAREN boolean_expr R_PAREN .

    $default  reduce using rule 59 (rexpr)


State 129

   76 Normal: L_PAREN expression R_PAREN .

    $default  reduce using rule 76 (Normal)


State 130

   73 Term_1: L_PAREN R_PAREN .

    $default  reduce using rule 73 (Term_1)


State 131

   77 Expression1: expression .
   78            | expression . COMMA Expression1

    COMMA  shift, and go to state 151

    $default  reduce using rule 77 (Expression1)


State 132

   72 Term_1: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 152


State 133

   80 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 153


State 134

   46 boolean_expr: boolean_expr OR relation_exprr .
   48 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 98

    $default  reduce using rule 46 (boolean_expr)


State 135

   48 relation_exprr: relation_exprr AND relation_expr .

    $default  reduce using rule 48 (relation_exprr)


State 136

   53 rexpr: expression LT expression .

    $default  reduce using rule 53 (rexpr)


State 137

   55 rexpr: expression LTE expression .

    $default  reduce using rule 55 (rexpr)


State 138

   54 rexpr: expression GT expression .

    $default  reduce using rule 54 (rexpr)


State 139

   56 rexpr: expression GTE expression .

    $default  reduce using rule 56 (rexpr)


State 140

   51 rexpr: expression EQ expression .

    $default  reduce using rule 51 (rexpr)


State 141

   52 rexpr: expression NEQ expression .

    $default  reduce using rule 52 (rexpr)


State 142

   62 expradd: ADD mul_expr . expradd

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106

    $default  reduce using rule 61 (expradd)

    expradd  go to state 154


State 143

   63 expradd: SUB mul_expr . expradd

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106

    $default  reduce using rule 61 (expradd)

    expradd  go to state 155


State 144

   66 multi_term: MULT term . multi_term

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 65 (multi_term)

    multi_term  go to state 156


State 145

   67 multi_term: DIV term . multi_term

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 65 (multi_term)

    multi_term  go to state 157


State 146

   68 multi_term: MOD term . multi_term

    MULT  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 65 (multi_term)

    multi_term  go to state 158


State 147

   37 read_mult: COMMA IDENT . read_mult
   38          | COMMA IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 112
    L_SQUARE_BRACKET  shift, and go to state 159

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 160


State 148

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 161


State 149

   43 comma_mult: COMMA Normal . comma_mult

    COMMA  shift, and go to state 116

    $default  reduce using rule 42 (comma_mult)

    comma_mult  go to state 162


State 150

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 163


State 151

   78 Expression1: expression COMMA . Expression1

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression   go to state 131
    mul_expr     go to state 68
    term         go to state 69
    Normal       go to state 70
    Expression1  go to state 164
    var          go to state 71


State 152

   72 Term_1: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 72 (Term_1)


State 153

   80 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 80 (var)


State 154

   62 expradd: ADD mul_expr expradd .

    $default  reduce using rule 62 (expradd)


State 155

   63 expradd: SUB mul_expr expradd .

    $default  reduce using rule 63 (expradd)


State 156

   66 multi_term: MULT term multi_term .

    $default  reduce using rule 66 (multi_term)


State 157

   67 multi_term: DIV term multi_term .

    $default  reduce using rule 67 (multi_term)


State 158

   68 multi_term: MOD term multi_term .

    $default  reduce using rule 68 (multi_term)


State 159

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 165
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 160

   37 read_mult: COMMA IDENT read_mult .

    $default  reduce using rule 37 (read_mult)


State 161

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 112

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 166


State 162

   43 comma_mult: COMMA Normal comma_mult .

    $default  reduce using rule 43 (comma_mult)


State 163

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 167
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 164

   78 Expression1: expression COMMA Expression1 .

    $default  reduce using rule 78 (Expression1)


State 165

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 168


State 166

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 41 (Read_in)


State 167

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 26 (assign_rule)


State 168

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 112

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 169


State 169

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 38 (read_mult)
