Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 beginparam: BEGIN_PARAMS

    5 endparam: END_PARAMS

    6 $@1: %empty

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    8 Declaration1: %empty
    9             | Declaration SEMICOLON Declaration1

   10 Declaration: Identifier COLON Type

   11 Identifier: IDENT
   12           | IDENT COMMA Identifier

   13 Type: INTEGER
   14     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 Statement1: Statement SEMICOLON Statement1
   16           | Statement SEMICOLON

   17 Statement: assign_rule
   18          | If_rule
   19          | while_rule
   20          | do_while_rule
   21          | Read_in
   22          | write_rule
   23          | CONTINUE
   24          | RETURN Expression

   25 assign_rule: IDENT ASSIGN Expression
   26            | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression

   27 if_condition: IF Bool-Expr THEN

   28 else_condition: if_condition Statement1 ELSE

   29 If_rule: if_condition Statement1 ENDIF
   30        | else_condition Statement1 ENDIF

   31 while_clause: WHILE Bool-Expr BEGINLOOP

   32 while_rule: while_clause Statement1 ENDLOOP

   33 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

   34 read_mult: COMMA IDENT read_mult
   35          | COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult
   36          | %empty

   37 Read_in: READ IDENT read_mult
   38        | READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult

   39 comma_mult: %empty
   40           | COMMA Normal comma_mult

   41 write_rule: WRITE Normal comma_mult

   42 Bool-Expr: Relation_And_Expr
   43          | Bool-Expr OR Relation_And_Expr

   44 Relation_And_Expr: Relation-Exprs
   45                  | Relation_And_Expr AND Relation-Exprs

   46 Relation-Exprs: Relation_Expr
   47               | NOT Relation_Expr

   48 Relation_Expr: Expression EQ Expression
   49              | Expression NEQ Expression
   50              | Expression LT Expression
   51              | Expression GT Expression
   52              | Expression LTE Expression
   53              | Expression GTE Expression
   54              | TRUE
   55              | FALSE
   56              | L_PAREN Bool-Expr R_PAREN

   57 Expression: Term_Mult-Expr expradd

   58 expradd: %empty
   59        | ADD Term_Mult-Expr expradd
   60        | SUB Term_Mult-Expr expradd

   61 Term_Mult-Expr: term Multiplicative-Expr

   62 Multiplicative-Expr: %empty
   63                    | MULT term Multiplicative-Expr
   64                    | DIV term Multiplicative-Expr
   65                    | MOD term Multiplicative-Expr

   66 term: Normal
   67     | SUB Normal
   68     | IDENT Term_1

   69 Normal: var
   70       | NUMBER
   71       | L_PAREN Expression R_PAREN

   72 Term_1: L_PAREN Expression1 R_PAREN
   73       | L_PAREN R_PAREN

   74 Expression1: Expression
   75            | Expression COMMA Expression1

   76 var: IDENT
   77    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 7
BEGIN_PARAMS (259) 4
END_PARAMS (260) 5
BEGIN_BODY (261) 7
token (262)
END_BODY (263) 7
BEGIN_LOCALS (264) 7
END_LOCALS (265) 7
INTEGER (266) 13 14
ARRAY (267) 14
OF (268) 14
IF (269) 27
THEN (270) 27
ENDIF (271) 29 30
ELSE (272) 28
WHILE (273) 31 33
DO (274) 33
BEGINLOOP (275) 31 33
ENDLOOP (276) 32 33
CONTINUE (277) 23
READ (278) 37 38
WRITE (279) 41
TRUE (280) 54
FALSE (281) 55
AND (282) 45
OR (283) 43
NOT (284) 47
SEMICOLON (285) 7 9 15 16
COLON (286) 10
COMMA (287) 12 34 35 40 75
L_PAREN (288) 56 71 72 73
R_PAREN (289) 56 71 72 73
L_SQUARE_BRACKET (290) 14 26 35 38 77
R_SQUARE_BRACKET (291) 14 26 35 38 77
ASSIGN (292) 25 26
RETURN (293) 24
NUMBER (294) 14 70
IDENT (295) 7 11 12 25 26 34 35 37 38 68 76 77
MULT (296) 63
DIV (297) 64
MOD (298) 65
ADD (299) 59
SUB (300) 60 67
LT (301) 50
LTE (302) 52
GT (303) 51
GTE (304) 53
EQ (305) 48
NEQ (306) 49


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
beginparam (55)
    on left: 4, on right: 7
endparam (56)
    on left: 5, on right: 7
Function (57)
    on left: 7, on right: 3
$@1 (58)
    on left: 6, on right: 7
Declaration1 (59)
    on left: 8 9, on right: 7 9
Declaration (60)
    on left: 10, on right: 9
Identifier (61)
    on left: 11 12, on right: 10 12
Type (62)
    on left: 13 14, on right: 10
Statement1 (63)
    on left: 15 16, on right: 7 15 28 29 30 32 33
Statement (64)
    on left: 17 18 19 20 21 22 23 24, on right: 15 16
assign_rule (65)
    on left: 25 26, on right: 17
if_condition (66)
    on left: 27, on right: 28 29
else_condition (67)
    on left: 28, on right: 30
If_rule (68)
    on left: 29 30, on right: 18
while_clause (69)
    on left: 31, on right: 32
while_rule (70)
    on left: 32, on right: 19
do_while_rule (71)
    on left: 33, on right: 20
read_mult (72)
    on left: 34 35 36, on right: 34 35 37 38
Read_in (73)
    on left: 37 38, on right: 21
comma_mult (74)
    on left: 39 40, on right: 40 41
write_rule (75)
    on left: 41, on right: 22
Bool-Expr (76)
    on left: 42 43, on right: 27 31 33 43 56
Relation_And_Expr (77)
    on left: 44 45, on right: 42 43 45
Relation-Exprs (78)
    on left: 46 47, on right: 44 45
Relation_Expr (79)
    on left: 48 49 50 51 52 53 54 55 56, on right: 46 47
Expression (80)
    on left: 57, on right: 24 25 26 35 38 48 49 50 51 52 53 71 74 75
    77
expradd (81)
    on left: 58 59 60, on right: 57 59 60
Term_Mult-Expr (82)
    on left: 61, on right: 57 59 60
Multiplicative-Expr (83)
    on left: 62 63 64 65, on right: 61 63 64 65
term (84)
    on left: 66 67 68, on right: 61 63 64 65
Normal (85)
    on left: 69 70 71, on right: 40 41 66 67
Term_1 (86)
    on left: 72 73, on right: 68
Expression1 (87)
    on left: 74 75, on right: 72 75
var (88)
    on left: 76 77, on right: 69


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    7 Function: FUNCTION . IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 7
    Function   go to state 4


State 5

    7 Function: FUNCTION IDENT . $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 8

    7 Function: FUNCTION IDENT $@1 . SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    7 Function: FUNCTION IDENT $@1 SEMICOLON . beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    beginparam  go to state 11


State 10

    4 beginparam: BEGIN_PARAMS .

    $default  reduce using rule 4 (beginparam)


State 11

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam . Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 13
    Declaration   go to state 14
    Identifier    go to state 15


State 12

   11 Identifier: IDENT .
   12           | IDENT . COMMA Identifier

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (Identifier)


State 13

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 . endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 17

    endparam  go to state 18


State 14

    9 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 15

   10 Declaration: Identifier . COLON Type

    COLON  shift, and go to state 20


State 16

   12 Identifier: IDENT COMMA . Identifier

    IDENT  shift, and go to state 12

    Identifier  go to state 21


State 17

    5 endparam: END_PARAMS .

    $default  reduce using rule 5 (endparam)


State 18

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    9 Declaration1: Declaration SEMICOLON . Declaration1

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 14
    Identifier    go to state 15


State 20

   10 Declaration: Identifier COLON . Type

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    Type  go to state 26


State 21

   12 Identifier: IDENT COMMA Identifier .

    $default  reduce using rule 12 (Identifier)


State 22

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 27
    Declaration   go to state 14
    Identifier    go to state 15


State 23

    9 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 9 (Declaration1)


State 24

   13 Type: INTEGER .

    $default  reduce using rule 13 (Type)


State 25

   14 Type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   10 Declaration: Identifier COLON Type .

    $default  reduce using rule 10 (Declaration)


State 27

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   14 Type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1      go to state 41
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 32

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 52


State 33

   27 if_condition: IF . Bool-Expr THEN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Bool-Expr          go to state 60
    Relation_And_Expr  go to state 61
    Relation-Exprs     go to state 62
    Relation_Expr      go to state 63
    Expression         go to state 64
    Term_Mult-Expr     go to state 65
    term               go to state 66
    Normal             go to state 67
    var                go to state 68


State 34

   31 while_clause: WHILE . Bool-Expr BEGINLOOP

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Bool-Expr          go to state 69
    Relation_And_Expr  go to state 61
    Relation-Exprs     go to state 62
    Relation_Expr      go to state 63
    Expression         go to state 64
    Term_Mult-Expr     go to state 65
    term               go to state 66
    Normal             go to state 67
    var                go to state 68


State 35

   33 do_while_rule: DO . BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 70


State 36

   23 Statement: CONTINUE .

    $default  reduce using rule 23 (Statement)


State 37

   37 Read_in: READ . IDENT read_mult
   38        | READ . IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 71


State 38

   41 write_rule: WRITE . Normal comma_mult

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 73

    Normal  go to state 74
    var     go to state 68


State 39

   24 Statement: RETURN . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 75
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 40

   25 assign_rule: IDENT . ASSIGN Expression
   26            | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression

    L_SQUARE_BRACKET  shift, and go to state 76
    ASSIGN            shift, and go to state 77


State 41

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 78


State 42

   15 Statement1: Statement . SEMICOLON Statement1
   16           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 43

   17 Statement: assign_rule .

    $default  reduce using rule 17 (Statement)


State 44

   28 else_condition: if_condition . Statement1 ELSE
   29 If_rule: if_condition . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1      go to state 80
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 45

   30 If_rule: else_condition . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1      go to state 81
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 46

   18 Statement: If_rule .

    $default  reduce using rule 18 (Statement)


State 47

   32 while_rule: while_clause . Statement1 ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1      go to state 82
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 48

   19 Statement: while_rule .

    $default  reduce using rule 19 (Statement)


State 49

   20 Statement: do_while_rule .

    $default  reduce using rule 20 (Statement)


State 50

   21 Statement: Read_in .

    $default  reduce using rule 21 (Statement)


State 51

   22 Statement: write_rule .

    $default  reduce using rule 22 (Statement)


State 52

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 83


State 53

   54 Relation_Expr: TRUE .

    $default  reduce using rule 54 (Relation_Expr)


State 54

   55 Relation_Expr: FALSE .

    $default  reduce using rule 55 (Relation_Expr)


State 55

   47 Relation-Exprs: NOT . Relation_Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Relation_Expr   go to state 84
    Expression      go to state 64
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 56

   56 Relation_Expr: L_PAREN . Bool-Expr R_PAREN
   71 Normal: L_PAREN . Expression R_PAREN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Bool-Expr          go to state 85
    Relation_And_Expr  go to state 61
    Relation-Exprs     go to state 62
    Relation_Expr      go to state 63
    Expression         go to state 86
    Term_Mult-Expr     go to state 65
    term               go to state 66
    Normal             go to state 67
    var                go to state 68


State 57

   70 Normal: NUMBER .

    $default  reduce using rule 70 (Normal)


State 58

   68 term: IDENT . Term_1
   76 var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 87
    L_SQUARE_BRACKET  shift, and go to state 88

    $default  reduce using rule 76 (var)

    Term_1  go to state 89


State 59

   67 term: SUB . Normal

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 73

    Normal  go to state 90
    var     go to state 68


State 60

   27 if_condition: IF Bool-Expr . THEN
   43 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    THEN  shift, and go to state 91
    OR    shift, and go to state 92


State 61

   42 Bool-Expr: Relation_And_Expr .
   45 Relation_And_Expr: Relation_And_Expr . AND Relation-Exprs

    AND  shift, and go to state 93

    $default  reduce using rule 42 (Bool-Expr)


State 62

   44 Relation_And_Expr: Relation-Exprs .

    $default  reduce using rule 44 (Relation_And_Expr)


State 63

   46 Relation-Exprs: Relation_Expr .

    $default  reduce using rule 46 (Relation-Exprs)


State 64

   48 Relation_Expr: Expression . EQ Expression
   49              | Expression . NEQ Expression
   50              | Expression . LT Expression
   51              | Expression . GT Expression
   52              | Expression . LTE Expression
   53              | Expression . GTE Expression

    LT   shift, and go to state 94
    LTE  shift, and go to state 95
    GT   shift, and go to state 96
    GTE  shift, and go to state 97
    EQ   shift, and go to state 98
    NEQ  shift, and go to state 99


State 65

   57 Expression: Term_Mult-Expr . expradd

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101

    $default  reduce using rule 58 (expradd)

    expradd  go to state 102


State 66

   61 Term_Mult-Expr: term . Multiplicative-Expr

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 62 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 106


State 67

   66 term: Normal .

    $default  reduce using rule 66 (term)


State 68

   69 Normal: var .

    $default  reduce using rule 69 (Normal)


State 69

   31 while_clause: WHILE Bool-Expr . BEGINLOOP
   43 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    BEGINLOOP  shift, and go to state 107
    OR         shift, and go to state 92


State 70

   33 do_while_rule: DO BEGINLOOP . Statement1 ENDLOOP WHILE Bool-Expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1      go to state 108
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 71

   37 Read_in: READ IDENT . read_mult
   38        | READ IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 109
    L_SQUARE_BRACKET  shift, and go to state 110

    $default  reduce using rule 36 (read_mult)

    read_mult  go to state 111


State 72

   71 Normal: L_PAREN . Expression R_PAREN

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 112
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 73

   76 var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 88

    $default  reduce using rule 76 (var)


State 74

   41 write_rule: WRITE Normal . comma_mult

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (comma_mult)

    comma_mult  go to state 114


State 75

   24 Statement: RETURN Expression .

    $default  reduce using rule 24 (Statement)


State 76

   26 assign_rule: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET ASSIGN Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 115
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 77

   25 assign_rule: IDENT ASSIGN . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 116
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 78

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 7 (Function)


State 79

   15 Statement1: Statement SEMICOLON . Statement1
   16           | Statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 16 (Statement1)

    Statement1      go to state 117
    Statement       go to state 42
    assign_rule     go to state 43
    if_condition    go to state 44
    else_condition  go to state 45
    If_rule         go to state 46
    while_clause    go to state 47
    while_rule      go to state 48
    do_while_rule   go to state 49
    Read_in         go to state 50
    write_rule      go to state 51


State 80

   28 else_condition: if_condition Statement1 . ELSE
   29 If_rule: if_condition Statement1 . ENDIF

    ENDIF  shift, and go to state 118
    ELSE   shift, and go to state 119


State 81

   30 If_rule: else_condition Statement1 . ENDIF

    ENDIF  shift, and go to state 120


State 82

   32 while_rule: while_clause Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 121


State 83

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (Type)


State 84

   47 Relation-Exprs: NOT Relation_Expr .

    $default  reduce using rule 47 (Relation-Exprs)


State 85

   43 Bool-Expr: Bool-Expr . OR Relation_And_Expr
   56 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    OR       shift, and go to state 92
    R_PAREN  shift, and go to state 122


State 86

   48 Relation_Expr: Expression . EQ Expression
   49              | Expression . NEQ Expression
   50              | Expression . LT Expression
   51              | Expression . GT Expression
   52              | Expression . LTE Expression
   53              | Expression . GTE Expression
   71 Normal: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 123
    LT       shift, and go to state 94
    LTE      shift, and go to state 95
    GT       shift, and go to state 96
    GTE      shift, and go to state 97
    EQ       shift, and go to state 98
    NEQ      shift, and go to state 99


State 87

   72 Term_1: L_PAREN . Expression1 R_PAREN
   73       | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 72
    R_PAREN  shift, and go to state 124
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 125
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    Expression1     go to state 126
    var             go to state 68


State 88

   77 var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 127
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 89

   68 term: IDENT Term_1 .

    $default  reduce using rule 68 (term)


State 90

   67 term: SUB Normal .

    $default  reduce using rule 67 (term)


State 91

   27 if_condition: IF Bool-Expr THEN .

    $default  reduce using rule 27 (if_condition)


State 92

   43 Bool-Expr: Bool-Expr OR . Relation_And_Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Relation_And_Expr  go to state 128
    Relation-Exprs     go to state 62
    Relation_Expr      go to state 63
    Expression         go to state 64
    Term_Mult-Expr     go to state 65
    term               go to state 66
    Normal             go to state 67
    var                go to state 68


State 93

   45 Relation_And_Expr: Relation_And_Expr AND . Relation-Exprs

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Relation-Exprs  go to state 129
    Relation_Expr   go to state 63
    Expression      go to state 64
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 94

   50 Relation_Expr: Expression LT . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 130
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 95

   52 Relation_Expr: Expression LTE . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 131
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 96

   51 Relation_Expr: Expression GT . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 132
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 97

   53 Relation_Expr: Expression GTE . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 133
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 98

   48 Relation_Expr: Expression EQ . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 134
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 99

   49 Relation_Expr: Expression NEQ . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 135
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 100

   59 expradd: ADD . Term_Mult-Expr expradd

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Term_Mult-Expr  go to state 136
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 101

   60 expradd: SUB . Term_Mult-Expr expradd

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Term_Mult-Expr  go to state 137
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 102

   57 Expression: Term_Mult-Expr expradd .

    $default  reduce using rule 57 (Expression)


State 103

   63 Multiplicative-Expr: MULT . term Multiplicative-Expr

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    term    go to state 138
    Normal  go to state 67
    var     go to state 68


State 104

   64 Multiplicative-Expr: DIV . term Multiplicative-Expr

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    term    go to state 139
    Normal  go to state 67
    var     go to state 68


State 105

   65 Multiplicative-Expr: MOD . term Multiplicative-Expr

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    term    go to state 140
    Normal  go to state 67
    var     go to state 68


State 106

   61 Term_Mult-Expr: term Multiplicative-Expr .

    $default  reduce using rule 61 (Term_Mult-Expr)


State 107

   31 while_clause: WHILE Bool-Expr BEGINLOOP .

    $default  reduce using rule 31 (while_clause)


State 108

   33 do_while_rule: DO BEGINLOOP Statement1 . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 141


State 109

   34 read_mult: COMMA . IDENT read_mult
   35          | COMMA . IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 142


State 110

   38 Read_in: READ IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 143
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 111

   37 Read_in: READ IDENT read_mult .

    $default  reduce using rule 37 (Read_in)


State 112

   71 Normal: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 113

   40 comma_mult: COMMA . Normal comma_mult

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 73

    Normal  go to state 144
    var     go to state 68


State 114

   41 write_rule: WRITE Normal comma_mult .

    $default  reduce using rule 41 (write_rule)


State 115

   26 assign_rule: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET ASSIGN Expression

    R_SQUARE_BRACKET  shift, and go to state 145


State 116

   25 assign_rule: IDENT ASSIGN Expression .

    $default  reduce using rule 25 (assign_rule)


State 117

   15 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 15 (Statement1)


State 118

   29 If_rule: if_condition Statement1 ENDIF .

    $default  reduce using rule 29 (If_rule)


State 119

   28 else_condition: if_condition Statement1 ELSE .

    $default  reduce using rule 28 (else_condition)


State 120

   30 If_rule: else_condition Statement1 ENDIF .

    $default  reduce using rule 30 (If_rule)


State 121

   32 while_rule: while_clause Statement1 ENDLOOP .

    $default  reduce using rule 32 (while_rule)


State 122

   56 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 56 (Relation_Expr)


State 123

   71 Normal: L_PAREN Expression R_PAREN .

    $default  reduce using rule 71 (Normal)


State 124

   73 Term_1: L_PAREN R_PAREN .

    $default  reduce using rule 73 (Term_1)


State 125

   74 Expression1: Expression .
   75            | Expression . COMMA Expression1

    COMMA  shift, and go to state 146

    $default  reduce using rule 74 (Expression1)


State 126

   72 Term_1: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 147


State 127

   77 var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 148


State 128

   43 Bool-Expr: Bool-Expr OR Relation_And_Expr .
   45 Relation_And_Expr: Relation_And_Expr . AND Relation-Exprs

    AND  shift, and go to state 93

    $default  reduce using rule 43 (Bool-Expr)


State 129

   45 Relation_And_Expr: Relation_And_Expr AND Relation-Exprs .

    $default  reduce using rule 45 (Relation_And_Expr)


State 130

   50 Relation_Expr: Expression LT Expression .

    $default  reduce using rule 50 (Relation_Expr)


State 131

   52 Relation_Expr: Expression LTE Expression .

    $default  reduce using rule 52 (Relation_Expr)


State 132

   51 Relation_Expr: Expression GT Expression .

    $default  reduce using rule 51 (Relation_Expr)


State 133

   53 Relation_Expr: Expression GTE Expression .

    $default  reduce using rule 53 (Relation_Expr)


State 134

   48 Relation_Expr: Expression EQ Expression .

    $default  reduce using rule 48 (Relation_Expr)


State 135

   49 Relation_Expr: Expression NEQ Expression .

    $default  reduce using rule 49 (Relation_Expr)


State 136

   59 expradd: ADD Term_Mult-Expr . expradd

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101

    $default  reduce using rule 58 (expradd)

    expradd  go to state 149


State 137

   60 expradd: SUB Term_Mult-Expr . expradd

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101

    $default  reduce using rule 58 (expradd)

    expradd  go to state 150


State 138

   63 Multiplicative-Expr: MULT term . Multiplicative-Expr

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 62 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 151


State 139

   64 Multiplicative-Expr: DIV term . Multiplicative-Expr

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 62 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 152


State 140

   65 Multiplicative-Expr: MOD term . Multiplicative-Expr

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 62 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 153


State 141

   33 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 154


State 142

   34 read_mult: COMMA IDENT . read_mult
   35          | COMMA IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 109
    L_SQUARE_BRACKET  shift, and go to state 155

    $default  reduce using rule 36 (read_mult)

    read_mult  go to state 156


State 143

   38 Read_in: READ IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 157


State 144

   40 comma_mult: COMMA Normal . comma_mult

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (comma_mult)

    comma_mult  go to state 158


State 145

   26 assign_rule: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . ASSIGN Expression

    ASSIGN  shift, and go to state 159


State 146

   75 Expression1: Expression COMMA . Expression1

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 125
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    Expression1     go to state 160
    var             go to state 68


State 147

   72 Term_1: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 72 (Term_1)


State 148

   77 var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 77 (var)


State 149

   59 expradd: ADD Term_Mult-Expr expradd .

    $default  reduce using rule 59 (expradd)


State 150

   60 expradd: SUB Term_Mult-Expr expradd .

    $default  reduce using rule 60 (expradd)


State 151

   63 Multiplicative-Expr: MULT term Multiplicative-Expr .

    $default  reduce using rule 63 (Multiplicative-Expr)


State 152

   64 Multiplicative-Expr: DIV term Multiplicative-Expr .

    $default  reduce using rule 64 (Multiplicative-Expr)


State 153

   65 Multiplicative-Expr: MOD term Multiplicative-Expr .

    $default  reduce using rule 65 (Multiplicative-Expr)


State 154

   33 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE . Bool-Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Bool-Expr          go to state 161
    Relation_And_Expr  go to state 61
    Relation-Exprs     go to state 62
    Relation_Expr      go to state 63
    Expression         go to state 64
    Term_Mult-Expr     go to state 65
    term               go to state 66
    Normal             go to state 67
    var                go to state 68


State 155

   35 read_mult: COMMA IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 162
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 156

   34 read_mult: COMMA IDENT read_mult .

    $default  reduce using rule 34 (read_mult)


State 157

   38 Read_in: READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 109

    $default  reduce using rule 36 (read_mult)

    read_mult  go to state 163


State 158

   40 comma_mult: COMMA Normal comma_mult .

    $default  reduce using rule 40 (comma_mult)


State 159

   26 assign_rule: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN . Expression

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 58
    SUB      shift, and go to state 59

    Expression      go to state 164
    Term_Mult-Expr  go to state 65
    term            go to state 66
    Normal          go to state 67
    var             go to state 68


State 160

   75 Expression1: Expression COMMA Expression1 .

    $default  reduce using rule 75 (Expression1)


State 161

   33 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr .
   43 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    OR  shift, and go to state 92

    $default  reduce using rule 33 (do_while_rule)


State 162

   35 read_mult: COMMA IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 165


State 163

   38 Read_in: READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 38 (Read_in)


State 164

   26 assign_rule: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression .

    $default  reduce using rule 26 (assign_rule)


State 165

   35 read_mult: COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 109

    $default  reduce using rule 36 (read_mult)

    read_mult  go to state 166


State 166

   35 read_mult: COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 35 (read_mult)
