Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 beginparam: BEGIN_PARAMS

    5 endparam: END_PARAMS

    6 $@1: %empty

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    8 Declaration1: %empty
    9             | Declaration SEMICOLON Declaration1

   10 Declaration: identifier COLON TYPE

   11 Statement1: Statement SEMICOLON Statement1
   12           | Statement SEMICOLON

   13 identifier: IDENT
   14           | IDENT COMMA identifier

   15 TYPE: INTEGER
   16     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 Statement: assign_rule
   18          | If_rule
   19          | while_rule
   20          | do_while_rule
   21          | Read_in
   22          | write_rule
   23          | CONTINUE
   24          | RETURN expression

   25 assign_rule: IDENT ASSIGN expression
   26            | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

   27 if_clause: IF Bool-Expr THEN

   28 else_if: if_clause Statement1 ELSE

   29 If_rule: if_clause Statement1 ENDIF
   30        | else_if Statement1 ENDIF

   31 while_key: WHILE

   32 while_clause: while_key Bool-Expr BEGINLOOP

   33 while_rule: while_clause Statement1 ENDLOOP

   34 do_key: DO BEGINLOOP

   35 do_check: do_key Statement1 ENDLOOP

   36 do_while_rule: do_check WHILE Bool-Expr

   37 read_mult: COMMA IDENT read_mult
   38          | COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult
   39          | %empty

   40 Read_in: READ IDENT read_mult
   41        | READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

   42 comma_mult: %empty
   43           | COMMA Normal comma_mult

   44 write_rule: WRITE Normal comma_mult

   45 Bool-Expr: relation_exprr
   46          | Bool-Expr OR relation_exprr

   47 relation_exprr: relation_expr
   48               | relation_exprr AND relation_expr

   49 relation_expr: Relation_Expr
   50              | NOT Relation_Expr

   51 Relation_Expr: expression Comp expression
   52              | TRUE
   53              | FALSE
   54              | L_PAREN Bool-Expr R_PAREN

   55 Comp: EQ
   56     | NEQ
   57     | LT
   58     | GT
   59     | LTE
   60     | GTE

   61 expression: mul_expr expradd

   62 expradd: %empty
   63        | ADD mul_expr expradd
   64        | SUB mul_expr expradd

   65 mul_expr: term multi_term

   66 multi_term: %empty
   67           | MULT term multi_term
   68           | DIV term multi_term
   69           | MOD term multi_term

   70 term: Normal
   71     | SUB Normal
   72     | IDENT Term_1

   73 Term_1: L_PAREN Expression1 R_PAREN
   74       | L_PAREN R_PAREN

   75 Normal: var
   76       | NUMBER
   77       | L_PAREN expression R_PAREN

   78 Expression1: expression
   79            | expression COMMA Expression1

   80 var: IDENT
   81    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 7
BEGIN_PARAMS (259) 4
END_PARAMS (260) 5
BEGIN_BODY (261) 7
token (262)
END_BODY (263) 7
BEGIN_LOCALS (264) 7
END_LOCALS (265) 7
INTEGER (266) 15 16
ARRAY (267) 16
OF (268) 16
IF (269) 27
THEN (270) 27
ENDIF (271) 29 30
ELSE (272) 28
WHILE (273) 31 36
DO (274) 34
BEGINLOOP (275) 32 34
ENDLOOP (276) 33 35
CONTINUE (277) 23
READ (278) 40 41
WRITE (279) 44
TRUE (280) 52
FALSE (281) 53
AND (282) 48
OR (283) 46
NOT (284) 50
SEMICOLON (285) 7 9 11 12
COLON (286) 10
COMMA (287) 14 37 38 43 79
L_PAREN (288) 54 73 74 77
R_PAREN (289) 54 73 74 77
L_SQUARE_BRACKET (290) 16 26 38 41 81
R_SQUARE_BRACKET (291) 16 26 38 41 81
ASSIGN (292) 25 26
RETURN (293) 24
NUMBER (294) 16 76
IDENT (295) 7 13 14 25 26 37 38 40 41 72 80 81
MULT (296) 67
DIV (297) 68
MOD (298) 69
ADD (299) 63
SUB (300) 64 71
LT (301) 57
LTE (302) 59
GT (303) 58
GTE (304) 60
EQ (305) 55
NEQ (306) 56


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
beginparam (55)
    on left: 4, on right: 7
endparam (56)
    on left: 5, on right: 7
Function (57)
    on left: 7, on right: 3
$@1 (58)
    on left: 6, on right: 7
Declaration1 (59)
    on left: 8 9, on right: 7 9
Declaration (60)
    on left: 10, on right: 9
Statement1 (61)
    on left: 11 12, on right: 7 11 28 29 30 33 35
identifier (62)
    on left: 13 14, on right: 10 14
TYPE (63)
    on left: 15 16, on right: 10
Statement (64)
    on left: 17 18 19 20 21 22 23 24, on right: 11 12
assign_rule (65)
    on left: 25 26, on right: 17
if_clause (66)
    on left: 27, on right: 28 29
else_if (67)
    on left: 28, on right: 30
If_rule (68)
    on left: 29 30, on right: 18
while_key (69)
    on left: 31, on right: 32
while_clause (70)
    on left: 32, on right: 33
while_rule (71)
    on left: 33, on right: 19
do_key (72)
    on left: 34, on right: 35
do_check (73)
    on left: 35, on right: 36
do_while_rule (74)
    on left: 36, on right: 20
read_mult (75)
    on left: 37 38 39, on right: 37 38 40 41
Read_in (76)
    on left: 40 41, on right: 21
comma_mult (77)
    on left: 42 43, on right: 43 44
write_rule (78)
    on left: 44, on right: 22
Bool-Expr (79)
    on left: 45 46, on right: 27 32 36 46 54
relation_exprr (80)
    on left: 47 48, on right: 45 46 48
relation_expr (81)
    on left: 49 50, on right: 47 48
Relation_Expr (82)
    on left: 51 52 53 54, on right: 49 50
Comp (83)
    on left: 55 56 57 58 59 60, on right: 51
expression (84)
    on left: 61, on right: 24 25 26 38 41 51 77 78 79 81
expradd (85)
    on left: 62 63 64, on right: 61 63 64
mul_expr (86)
    on left: 65, on right: 61 63 64
multi_term (87)
    on left: 66 67 68 69, on right: 65 67 68 69
term (88)
    on left: 70 71 72, on right: 65 67 68 69
Term_1 (89)
    on left: 73 74, on right: 72
Normal (90)
    on left: 75 76 77, on right: 43 44 70 71
Expression1 (91)
    on left: 78 79, on right: 73 79
var (92)
    on left: 80 81, on right: 75


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    7 Function: FUNCTION . IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 7
    Function   go to state 4


State 5

    7 Function: FUNCTION IDENT . $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 6 ($@1)

    $@1  go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 8

    7 Function: FUNCTION IDENT $@1 . SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    7 Function: FUNCTION IDENT $@1 SEMICOLON . beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    beginparam  go to state 11


State 10

    4 beginparam: BEGIN_PARAMS .

    $default  reduce using rule 4 (beginparam)


State 11

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam . Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 13
    Declaration   go to state 14
    identifier    go to state 15


State 12

   13 identifier: IDENT .
   14           | IDENT . COMMA identifier

    COMMA  shift, and go to state 16

    $default  reduce using rule 13 (identifier)


State 13

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 . endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 17

    endparam  go to state 18


State 14

    9 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 15

   10 Declaration: identifier . COLON TYPE

    COLON  shift, and go to state 20


State 16

   14 identifier: IDENT COMMA . identifier

    IDENT  shift, and go to state 12

    identifier  go to state 21


State 17

    5 endparam: END_PARAMS .

    $default  reduce using rule 5 (endparam)


State 18

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    9 Declaration1: Declaration SEMICOLON . Declaration1

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 14
    identifier    go to state 15


State 20

   10 Declaration: identifier COLON . TYPE

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    TYPE  go to state 26


State 21

   14 identifier: IDENT COMMA identifier .

    $default  reduce using rule 14 (identifier)


State 22

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (Declaration1)

    Declaration1  go to state 27
    Declaration   go to state 14
    identifier    go to state 15


State 23

    9 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 9 (Declaration1)


State 24

   15 TYPE: INTEGER .

    $default  reduce using rule 15 (TYPE)


State 25

   16 TYPE: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   10 Declaration: identifier COLON TYPE .

    $default  reduce using rule 10 (Declaration)


State 27

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   16 TYPE: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 41
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 32

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 55


State 33

   27 if_clause: IF . Bool-Expr THEN

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    Bool-Expr       go to state 63
    relation_exprr  go to state 64
    relation_expr   go to state 65
    Relation_Expr   go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 34

   31 while_key: WHILE .

    $default  reduce using rule 31 (while_key)


State 35

   34 do_key: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 72


State 36

   23 Statement: CONTINUE .

    $default  reduce using rule 23 (Statement)


State 37

   40 Read_in: READ . IDENT read_mult
   41        | READ . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 73


State 38

   44 write_rule: WRITE . Normal comma_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 76
    var     go to state 71


State 39

   24 Statement: RETURN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 77
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 40

   25 assign_rule: IDENT . ASSIGN expression
   26            | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_SQUARE_BRACKET  shift, and go to state 78
    ASSIGN            shift, and go to state 79


State 41

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 80


State 42

   11 Statement1: Statement . SEMICOLON Statement1
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 43

   17 Statement: assign_rule .

    $default  reduce using rule 17 (Statement)


State 44

   28 else_if: if_clause . Statement1 ELSE
   29 If_rule: if_clause . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 82
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 45

   30 If_rule: else_if . Statement1 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 83
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 46

   18 Statement: If_rule .

    $default  reduce using rule 18 (Statement)


State 47

   32 while_clause: while_key . Bool-Expr BEGINLOOP

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    Bool-Expr       go to state 84
    relation_exprr  go to state 64
    relation_expr   go to state 65
    Relation_Expr   go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 48

   33 while_rule: while_clause . Statement1 ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 85
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 49

   19 Statement: while_rule .

    $default  reduce using rule 19 (Statement)


State 50

   35 do_check: do_key . Statement1 ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    Statement1     go to state 86
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 51

   36 do_while_rule: do_check . WHILE Bool-Expr

    WHILE  shift, and go to state 87


State 52

   20 Statement: do_while_rule .

    $default  reduce using rule 20 (Statement)


State 53

   21 Statement: Read_in .

    $default  reduce using rule 21 (Statement)


State 54

   22 Statement: write_rule .

    $default  reduce using rule 22 (Statement)


State 55

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 88


State 56

   52 Relation_Expr: TRUE .

    $default  reduce using rule 52 (Relation_Expr)


State 57

   53 Relation_Expr: FALSE .

    $default  reduce using rule 53 (Relation_Expr)


State 58

   50 relation_expr: NOT . Relation_Expr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    Relation_Expr  go to state 89
    expression     go to state 67
    mul_expr       go to state 68
    term           go to state 69
    Normal         go to state 70
    var            go to state 71


State 59

   54 Relation_Expr: L_PAREN . Bool-Expr R_PAREN
   77 Normal: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    Bool-Expr       go to state 90
    relation_exprr  go to state 64
    relation_expr   go to state 65
    Relation_Expr   go to state 66
    expression      go to state 91
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 60

   76 Normal: NUMBER .

    $default  reduce using rule 76 (Normal)


State 61

   72 term: IDENT . Term_1
   80 var: IDENT .
   81    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 92
    L_SQUARE_BRACKET  shift, and go to state 93

    $default  reduce using rule 80 (var)

    Term_1  go to state 94


State 62

   71 term: SUB . Normal

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 95
    var     go to state 71


State 63

   27 if_clause: IF Bool-Expr . THEN
   46 Bool-Expr: Bool-Expr . OR relation_exprr

    THEN  shift, and go to state 96
    OR    shift, and go to state 97


State 64

   45 Bool-Expr: relation_exprr .
   48 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 98

    $default  reduce using rule 45 (Bool-Expr)


State 65

   47 relation_exprr: relation_expr .

    $default  reduce using rule 47 (relation_exprr)


State 66

   49 relation_expr: Relation_Expr .

    $default  reduce using rule 49 (relation_expr)


State 67

   51 Relation_Expr: expression . Comp expression

    LT   shift, and go to state 99
    LTE  shift, and go to state 100
    GT   shift, and go to state 101
    GTE  shift, and go to state 102
    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104

    Comp  go to state 105


State 68

   61 expression: mul_expr . expradd

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107

    $default  reduce using rule 62 (expradd)

    expradd  go to state 108


State 69

   65 mul_expr: term . multi_term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 66 (multi_term)

    multi_term  go to state 112


State 70

   70 term: Normal .

    $default  reduce using rule 70 (term)


State 71

   75 Normal: var .

    $default  reduce using rule 75 (Normal)


State 72

   34 do_key: DO BEGINLOOP .

    $default  reduce using rule 34 (do_key)


State 73

   40 Read_in: READ IDENT . read_mult
   41        | READ IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 113
    L_SQUARE_BRACKET  shift, and go to state 114

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 115


State 74

   77 Normal: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 116
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 75

   80 var: IDENT .
   81    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 93

    $default  reduce using rule 80 (var)


State 76

   44 write_rule: WRITE Normal . comma_mult

    COMMA  shift, and go to state 117

    $default  reduce using rule 42 (comma_mult)

    comma_mult  go to state 118


State 77

   24 Statement: RETURN expression .

    $default  reduce using rule 24 (Statement)


State 78

   26 assign_rule: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 119
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 79

   25 assign_rule: IDENT ASSIGN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 120
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 80

    7 Function: FUNCTION IDENT $@1 SEMICOLON beginparam Declaration1 endparam BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 7 (Function)


State 81

   11 Statement1: Statement SEMICOLON . Statement1
   12           | Statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 12 (Statement1)

    Statement1     go to state 121
    Statement      go to state 42
    assign_rule    go to state 43
    if_clause      go to state 44
    else_if        go to state 45
    If_rule        go to state 46
    while_key      go to state 47
    while_clause   go to state 48
    while_rule     go to state 49
    do_key         go to state 50
    do_check       go to state 51
    do_while_rule  go to state 52
    Read_in        go to state 53
    write_rule     go to state 54


State 82

   28 else_if: if_clause Statement1 . ELSE
   29 If_rule: if_clause Statement1 . ENDIF

    ENDIF  shift, and go to state 122
    ELSE   shift, and go to state 123


State 83

   30 If_rule: else_if Statement1 . ENDIF

    ENDIF  shift, and go to state 124


State 84

   32 while_clause: while_key Bool-Expr . BEGINLOOP
   46 Bool-Expr: Bool-Expr . OR relation_exprr

    BEGINLOOP  shift, and go to state 125
    OR         shift, and go to state 97


State 85

   33 while_rule: while_clause Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 86

   35 do_check: do_key Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 87

   36 do_while_rule: do_check WHILE . Bool-Expr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    Bool-Expr       go to state 128
    relation_exprr  go to state 64
    relation_expr   go to state 65
    Relation_Expr   go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 88

   16 TYPE: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (TYPE)


State 89

   50 relation_expr: NOT Relation_Expr .

    $default  reduce using rule 50 (relation_expr)


State 90

   46 Bool-Expr: Bool-Expr . OR relation_exprr
   54 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    OR       shift, and go to state 97
    R_PAREN  shift, and go to state 129


State 91

   51 Relation_Expr: expression . Comp expression
   77 Normal: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 130
    LT       shift, and go to state 99
    LTE      shift, and go to state 100
    GT       shift, and go to state 101
    GTE      shift, and go to state 102
    EQ       shift, and go to state 103
    NEQ      shift, and go to state 104

    Comp  go to state 105


State 92

   73 Term_1: L_PAREN . Expression1 R_PAREN
   74       | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 74
    R_PAREN  shift, and go to state 131
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression   go to state 132
    mul_expr     go to state 68
    term         go to state 69
    Normal       go to state 70
    Expression1  go to state 133
    var          go to state 71


State 93

   81 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 134
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 94

   72 term: IDENT Term_1 .

    $default  reduce using rule 72 (term)


State 95

   71 term: SUB Normal .

    $default  reduce using rule 71 (term)


State 96

   27 if_clause: IF Bool-Expr THEN .

    $default  reduce using rule 27 (if_clause)


State 97

   46 Bool-Expr: Bool-Expr OR . relation_exprr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    relation_exprr  go to state 135
    relation_expr   go to state 65
    Relation_Expr   go to state 66
    expression      go to state 67
    mul_expr        go to state 68
    term            go to state 69
    Normal          go to state 70
    var             go to state 71


State 98

   48 relation_exprr: relation_exprr AND . relation_expr

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    NOT      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    relation_expr  go to state 136
    Relation_Expr  go to state 66
    expression     go to state 67
    mul_expr       go to state 68
    term           go to state 69
    Normal         go to state 70
    var            go to state 71


State 99

   57 Comp: LT .

    $default  reduce using rule 57 (Comp)


State 100

   59 Comp: LTE .

    $default  reduce using rule 59 (Comp)


State 101

   58 Comp: GT .

    $default  reduce using rule 58 (Comp)


State 102

   60 Comp: GTE .

    $default  reduce using rule 60 (Comp)


State 103

   55 Comp: EQ .

    $default  reduce using rule 55 (Comp)


State 104

   56 Comp: NEQ .

    $default  reduce using rule 56 (Comp)


State 105

   51 Relation_Expr: expression Comp . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 137
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 106

   63 expradd: ADD . mul_expr expradd

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    mul_expr  go to state 138
    term      go to state 69
    Normal    go to state 70
    var       go to state 71


State 107

   64 expradd: SUB . mul_expr expradd

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    mul_expr  go to state 139
    term      go to state 69
    Normal    go to state 70
    var       go to state 71


State 108

   61 expression: mul_expr expradd .

    $default  reduce using rule 61 (expression)


State 109

   67 multi_term: MULT . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 140
    Normal  go to state 70
    var     go to state 71


State 110

   68 multi_term: DIV . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 141
    Normal  go to state 70
    var     go to state 71


State 111

   69 multi_term: MOD . term multi_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 142
    Normal  go to state 70
    var     go to state 71


State 112

   65 mul_expr: term multi_term .

    $default  reduce using rule 65 (mul_expr)


State 113

   37 read_mult: COMMA . IDENT read_mult
   38          | COMMA . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 143


State 114

   41 Read_in: READ IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 144
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 115

   40 Read_in: READ IDENT read_mult .

    $default  reduce using rule 40 (Read_in)


State 116

   77 Normal: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 130


State 117

   43 comma_mult: COMMA . Normal comma_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 75

    Normal  go to state 145
    var     go to state 71


State 118

   44 write_rule: WRITE Normal comma_mult .

    $default  reduce using rule 44 (write_rule)


State 119

   26 assign_rule: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 146


State 120

   25 assign_rule: IDENT ASSIGN expression .

    $default  reduce using rule 25 (assign_rule)


State 121

   11 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 11 (Statement1)


State 122

   29 If_rule: if_clause Statement1 ENDIF .

    $default  reduce using rule 29 (If_rule)


State 123

   28 else_if: if_clause Statement1 ELSE .

    $default  reduce using rule 28 (else_if)


State 124

   30 If_rule: else_if Statement1 ENDIF .

    $default  reduce using rule 30 (If_rule)


State 125

   32 while_clause: while_key Bool-Expr BEGINLOOP .

    $default  reduce using rule 32 (while_clause)


State 126

   33 while_rule: while_clause Statement1 ENDLOOP .

    $default  reduce using rule 33 (while_rule)


State 127

   35 do_check: do_key Statement1 ENDLOOP .

    $default  reduce using rule 35 (do_check)


State 128

   36 do_while_rule: do_check WHILE Bool-Expr .
   46 Bool-Expr: Bool-Expr . OR relation_exprr

    OR  shift, and go to state 97

    $default  reduce using rule 36 (do_while_rule)


State 129

   54 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 54 (Relation_Expr)


State 130

   77 Normal: L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (Normal)


State 131

   74 Term_1: L_PAREN R_PAREN .

    $default  reduce using rule 74 (Term_1)


State 132

   78 Expression1: expression .
   79            | expression . COMMA Expression1

    COMMA  shift, and go to state 147

    $default  reduce using rule 78 (Expression1)


State 133

   73 Term_1: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 148


State 134

   81 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 149


State 135

   46 Bool-Expr: Bool-Expr OR relation_exprr .
   48 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 98

    $default  reduce using rule 46 (Bool-Expr)


State 136

   48 relation_exprr: relation_exprr AND relation_expr .

    $default  reduce using rule 48 (relation_exprr)


State 137

   51 Relation_Expr: expression Comp expression .

    $default  reduce using rule 51 (Relation_Expr)


State 138

   63 expradd: ADD mul_expr . expradd

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107

    $default  reduce using rule 62 (expradd)

    expradd  go to state 150


State 139

   64 expradd: SUB mul_expr . expradd

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107

    $default  reduce using rule 62 (expradd)

    expradd  go to state 151


State 140

   67 multi_term: MULT term . multi_term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 66 (multi_term)

    multi_term  go to state 152


State 141

   68 multi_term: DIV term . multi_term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 66 (multi_term)

    multi_term  go to state 153


State 142

   69 multi_term: MOD term . multi_term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 66 (multi_term)

    multi_term  go to state 154


State 143

   37 read_mult: COMMA IDENT . read_mult
   38          | COMMA IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 113
    L_SQUARE_BRACKET  shift, and go to state 155

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 156


State 144

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 157


State 145

   43 comma_mult: COMMA Normal . comma_mult

    COMMA  shift, and go to state 117

    $default  reduce using rule 42 (comma_mult)

    comma_mult  go to state 158


State 146

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 159


State 147

   79 Expression1: expression COMMA . Expression1

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression   go to state 132
    mul_expr     go to state 68
    term         go to state 69
    Normal       go to state 70
    Expression1  go to state 160
    var          go to state 71


State 148

   73 Term_1: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 73 (Term_1)


State 149

   81 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 81 (var)


State 150

   63 expradd: ADD mul_expr expradd .

    $default  reduce using rule 63 (expradd)


State 151

   64 expradd: SUB mul_expr expradd .

    $default  reduce using rule 64 (expradd)


State 152

   67 multi_term: MULT term multi_term .

    $default  reduce using rule 67 (multi_term)


State 153

   68 multi_term: DIV term multi_term .

    $default  reduce using rule 68 (multi_term)


State 154

   69 multi_term: MOD term multi_term .

    $default  reduce using rule 69 (multi_term)


State 155

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 161
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 156

   37 read_mult: COMMA IDENT read_mult .

    $default  reduce using rule 37 (read_mult)


State 157

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 162


State 158

   43 comma_mult: COMMA Normal comma_mult .

    $default  reduce using rule 43 (comma_mult)


State 159

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 60
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression  go to state 163
    mul_expr    go to state 68
    term        go to state 69
    Normal      go to state 70
    var         go to state 71


State 160

   79 Expression1: expression COMMA Expression1 .

    $default  reduce using rule 79 (Expression1)


State 161

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 164


State 162

   41 Read_in: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 41 (Read_in)


State 163

   26 assign_rule: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 26 (assign_rule)


State 164

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 113

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 165


State 165

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 38 (read_mult)
