Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: functions

    2 functions: %empty
    3          | function functions

    4 function_name: FUNCTION IDENT

    5 beginparam: BEGIN_PARAMS

    6 endparam: END_PARAMS

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: id COLON assign

   11 id: IDENT
   12   | IDENT COMMA id

   13 assign: INTEGER
   14       | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 statements: statement SEMICOLON statements
   16           | statement SEMICOLON

   17 statement: aa
   18          | bb
   19          | cc
   20          | dd
   21          | ee
   22          | ff
   23          | gg
   24          | hh

   25 aa: IDENT ASSIGN expression
   26   | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

   27 if_clause: IF boolean_expr THEN

   28 else_if: if_clause statements ELSE

   29 bb: if_clause statements ENDIF
   30   | else_if statements ENDIF

   31 while_key: WHILE

   32 while_clause: while_key boolean_expr BEGINLOOP

   33 cc: while_clause statements ENDLOOP

   34 do_key: DO BEGINLOOP

   35 do_check: do_key statements ENDLOOP

   36 dd: do_check WHILE boolean_expr

   37 read_mult: COMMA IDENT read_mult
   38          | COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult
   39          | %empty

   40 ee: READ IDENT read_mult
   41   | READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

   42 ii: %empty
   43   | COMMA posterm ii

   44 ff: WRITE posterm ii

   45 gg: CONTINUE

   46 hh: RETURN expression

   47 boolean_expr: relation_exprr
   48             | boolean_expr OR relation_exprr

   49 relation_exprr: relation_expr
   50               | relation_exprr AND relation_expr

   51 relation_expr: rexpr
   52              | NOT rexpr

   53 rexpr: expression EQ expression
   54      | expression NEQ expression
   55      | expression LT expression
   56      | expression GT expression
   57      | expression LTE expression
   58      | expression GTE expression
   59      | TRUE
   60      | FALSE
   61      | L_PAREN boolean_expr R_PAREN

   62 expression: mul_expr expradd

   63 expradd: %empty
   64        | ADD mul_expr expradd
   65        | SUB mul_expr expradd

   66 mul_expr: term multi_term

   67 multi_term: %empty
   68           | MULT term multi_term
   69           | DIV term multi_term
   70           | MOD term multi_term

   71 term: posterm
   72     | SUB posterm
   73     | IDENT term_iden

   74 posterm: var
   75        | NUMBER
   76        | L_PAREN expression R_PAREN

   77 term_iden: L_PAREN term_ex R_PAREN
   78          | L_PAREN R_PAREN

   79 term_ex: expression
   80        | expression COMMA term_ex

   81 var: IDENT
   82    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 5
END_PARAMS (260) 6
BEGIN_BODY (261) 7
token (262)
END_BODY (263) 7
BEGIN_LOCALS (264) 7
END_LOCALS (265) 7
INTEGER (266) 13 14
ARRAY (267) 14
OF (268) 14
IF (269) 27
THEN (270) 27
ENDIF (271) 29 30
ELSE (272) 28
WHILE (273) 31 36
DO (274) 34
BEGINLOOP (275) 32 34
ENDLOOP (276) 33 35
CONTINUE (277) 45
READ (278) 40 41
WRITE (279) 44
TRUE (280) 59
FALSE (281) 60
AND (282) 50
OR (283) 48
NOT (284) 52
SEMICOLON (285) 7 9 15 16
COLON (286) 10
COMMA (287) 12 37 38 43 80
L_PAREN (288) 61 76 77 78
R_PAREN (289) 61 76 77 78
L_SQUARE_BRACKET (290) 14 26 38 41 82
R_SQUARE_BRACKET (291) 14 26 38 41 82
ASSIGN (292) 25 26
RETURN (293) 46
NUMBER (294) 14 75
IDENT (295) 4 11 12 25 26 37 38 40 41 73 81 82
MULT (296) 68
DIV (297) 69
MOD (298) 70
ADD (299) 64
SUB (300) 65 72
LT (301) 55
LTE (302) 57
GT (303) 56
GTE (304) 58
EQ (305) 53
NEQ (306) 54


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function_name (55)
    on left: 4, on right: 7
beginparam (56)
    on left: 5, on right: 7
endparam (57)
    on left: 6, on right: 7
function (58)
    on left: 7, on right: 3
declarations (59)
    on left: 8 9, on right: 7 9
declaration (60)
    on left: 10, on right: 9
id (61)
    on left: 11 12, on right: 10 12
assign (62)
    on left: 13 14, on right: 10
statements (63)
    on left: 15 16, on right: 7 15 28 29 30 33 35
statement (64)
    on left: 17 18 19 20 21 22 23 24, on right: 15 16
aa (65)
    on left: 25 26, on right: 17
if_clause (66)
    on left: 27, on right: 28 29
else_if (67)
    on left: 28, on right: 30
bb (68)
    on left: 29 30, on right: 18
while_key (69)
    on left: 31, on right: 32
while_clause (70)
    on left: 32, on right: 33
cc (71)
    on left: 33, on right: 19
do_key (72)
    on left: 34, on right: 35
do_check (73)
    on left: 35, on right: 36
dd (74)
    on left: 36, on right: 20
read_mult (75)
    on left: 37 38 39, on right: 37 38 40 41
ee (76)
    on left: 40 41, on right: 21
ii (77)
    on left: 42 43, on right: 43 44
ff (78)
    on left: 44, on right: 22
gg (79)
    on left: 45, on right: 23
hh (80)
    on left: 46, on right: 24
boolean_expr (81)
    on left: 47 48, on right: 27 32 36 48 61
relation_exprr (82)
    on left: 49 50, on right: 47 48 50
relation_expr (83)
    on left: 51 52, on right: 49 50
rexpr (84)
    on left: 53 54 55 56 57 58 59 60 61, on right: 51 52
expression (85)
    on left: 62, on right: 25 26 38 41 46 53 54 55 56 57 58 76 79 80
    82
expradd (86)
    on left: 63 64 65, on right: 62 64 65
mul_expr (87)
    on left: 66, on right: 62 64 65
multi_term (88)
    on left: 67 68 69 70, on right: 66 68 69 70
term (89)
    on left: 71 72 73, on right: 66 68 69 70
posterm (90)
    on left: 74 75 76, on right: 43 44 71 72
term_iden (91)
    on left: 77 78, on right: 73
term_ex (92)
    on left: 79 80, on right: 77 80
var (93)
    on left: 81 82, on right: 74


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    Program        go to state 2
    functions      go to state 3
    function_name  go to state 4
    function       go to state 5


State 1

    4 function_name: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: functions .

    $default  reduce using rule 1 (Program)


State 4

    7 function: function_name . SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 5

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions      go to state 9
    function_name  go to state 4
    function       go to state 5


State 6

    4 function_name: FUNCTION IDENT .

    $default  reduce using rule 4 (function_name)


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    7 function: function_name SEMICOLON . beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    beginparam  go to state 11


State 9

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 10

    5 beginparam: BEGIN_PARAMS .

    $default  reduce using rule 5 (beginparam)


State 11

    7 function: function_name SEMICOLON beginparam . declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    id            go to state 15


State 12

   11 id: IDENT .
   12   | IDENT . COMMA id

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (id)


State 13

    7 function: function_name SEMICOLON beginparam declarations . endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    endparam  go to state 18


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   10 declaration: id . COLON assign

    COLON  shift, and go to state 20


State 16

   12 id: IDENT COMMA . id

    IDENT  shift, and go to state 12

    id  go to state 21


State 17

    6 endparam: END_PARAMS .

    $default  reduce using rule 6 (endparam)


State 18

    7 function: function_name SEMICOLON beginparam declarations endparam . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    id            go to state 15


State 20

   10 declaration: id COLON . assign

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    assign  go to state 26


State 21

   12 id: IDENT COMMA id .

    $default  reduce using rule 12 (id)


State 22

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 27
    declaration   go to state 14
    id            go to state 15


State 23

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 24

   13 assign: INTEGER .

    $default  reduce using rule 13 (assign)


State 25

   14 assign: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   10 declaration: id COLON assign .

    $default  reduce using rule 10 (declaration)


State 27

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   14 assign: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   14 assign: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements    go to state 41
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 32

   14 assign: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 57


State 33

   27 if_clause: IF . boolean_expr THEN

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    boolean_expr    go to state 65
    relation_exprr  go to state 66
    relation_expr   go to state 67
    rexpr           go to state 68
    expression      go to state 69
    mul_expr        go to state 70
    term            go to state 71
    posterm         go to state 72
    var             go to state 73


State 34

   31 while_key: WHILE .

    $default  reduce using rule 31 (while_key)


State 35

   34 do_key: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 74


State 36

   45 gg: CONTINUE .

    $default  reduce using rule 45 (gg)


State 37

   40 ee: READ . IDENT read_mult
   41   | READ . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 75


State 38

   44 ff: WRITE . posterm ii

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 77

    posterm  go to state 78
    var      go to state 73


State 39

   46 hh: RETURN . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 79
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 40

   25 aa: IDENT . ASSIGN expression
   26   | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_SQUARE_BRACKET  shift, and go to state 80
    ASSIGN            shift, and go to state 81


State 41

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 82


State 42

   15 statements: statement . SEMICOLON statements
   16           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 43

   17 statement: aa .

    $default  reduce using rule 17 (statement)


State 44

   28 else_if: if_clause . statements ELSE
   29 bb: if_clause . statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements    go to state 84
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 45

   30 bb: else_if . statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements    go to state 85
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 46

   18 statement: bb .

    $default  reduce using rule 18 (statement)


State 47

   32 while_clause: while_key . boolean_expr BEGINLOOP

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    boolean_expr    go to state 86
    relation_exprr  go to state 66
    relation_expr   go to state 67
    rexpr           go to state 68
    expression      go to state 69
    mul_expr        go to state 70
    term            go to state 71
    posterm         go to state 72
    var             go to state 73


State 48

   33 cc: while_clause . statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements    go to state 87
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 49

   19 statement: cc .

    $default  reduce using rule 19 (statement)


State 50

   35 do_check: do_key . statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statements    go to state 88
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 51

   36 dd: do_check . WHILE boolean_expr

    WHILE  shift, and go to state 89


State 52

   20 statement: dd .

    $default  reduce using rule 20 (statement)


State 53

   21 statement: ee .

    $default  reduce using rule 21 (statement)


State 54

   22 statement: ff .

    $default  reduce using rule 22 (statement)


State 55

   23 statement: gg .

    $default  reduce using rule 23 (statement)


State 56

   24 statement: hh .

    $default  reduce using rule 24 (statement)


State 57

   14 assign: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 90


State 58

   59 rexpr: TRUE .

    $default  reduce using rule 59 (rexpr)


State 59

   60 rexpr: FALSE .

    $default  reduce using rule 60 (rexpr)


State 60

   52 relation_expr: NOT . rexpr

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    rexpr       go to state 91
    expression  go to state 69
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 61

   61 rexpr: L_PAREN . boolean_expr R_PAREN
   76 posterm: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    boolean_expr    go to state 92
    relation_exprr  go to state 66
    relation_expr   go to state 67
    rexpr           go to state 68
    expression      go to state 93
    mul_expr        go to state 70
    term            go to state 71
    posterm         go to state 72
    var             go to state 73


State 62

   75 posterm: NUMBER .

    $default  reduce using rule 75 (posterm)


State 63

   73 term: IDENT . term_iden
   81 var: IDENT .
   82    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 95

    $default  reduce using rule 81 (var)

    term_iden  go to state 96


State 64

   72 term: SUB . posterm

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 77

    posterm  go to state 97
    var      go to state 73


State 65

   27 if_clause: IF boolean_expr . THEN
   48 boolean_expr: boolean_expr . OR relation_exprr

    THEN  shift, and go to state 98
    OR    shift, and go to state 99


State 66

   47 boolean_expr: relation_exprr .
   50 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 100

    $default  reduce using rule 47 (boolean_expr)


State 67

   49 relation_exprr: relation_expr .

    $default  reduce using rule 49 (relation_exprr)


State 68

   51 relation_expr: rexpr .

    $default  reduce using rule 51 (relation_expr)


State 69

   53 rexpr: expression . EQ expression
   54      | expression . NEQ expression
   55      | expression . LT expression
   56      | expression . GT expression
   57      | expression . LTE expression
   58      | expression . GTE expression

    LT   shift, and go to state 101
    LTE  shift, and go to state 102
    GT   shift, and go to state 103
    GTE  shift, and go to state 104
    EQ   shift, and go to state 105
    NEQ  shift, and go to state 106


State 70

   62 expression: mul_expr . expradd

    ADD  shift, and go to state 107
    SUB  shift, and go to state 108

    $default  reduce using rule 63 (expradd)

    expradd  go to state 109


State 71

   66 mul_expr: term . multi_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 67 (multi_term)

    multi_term  go to state 113


State 72

   71 term: posterm .

    $default  reduce using rule 71 (term)


State 73

   74 posterm: var .

    $default  reduce using rule 74 (posterm)


State 74

   34 do_key: DO BEGINLOOP .

    $default  reduce using rule 34 (do_key)


State 75

   40 ee: READ IDENT . read_mult
   41   | READ IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 114
    L_SQUARE_BRACKET  shift, and go to state 115

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 116


State 76

   76 posterm: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 117
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 77

   81 var: IDENT .
   82    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 95

    $default  reduce using rule 81 (var)


State 78

   44 ff: WRITE posterm . ii

    COMMA  shift, and go to state 118

    $default  reduce using rule 42 (ii)

    ii  go to state 119


State 79

   46 hh: RETURN expression .

    $default  reduce using rule 46 (hh)


State 80

   26 aa: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 120
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 81

   25 aa: IDENT ASSIGN . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 121
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 82

    7 function: function_name SEMICOLON beginparam declarations endparam BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (function)


State 83

   15 statements: statement SEMICOLON . statements
   16           | statement SEMICOLON .

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 16 (statements)

    statements    go to state 122
    statement     go to state 42
    aa            go to state 43
    if_clause     go to state 44
    else_if       go to state 45
    bb            go to state 46
    while_key     go to state 47
    while_clause  go to state 48
    cc            go to state 49
    do_key        go to state 50
    do_check      go to state 51
    dd            go to state 52
    ee            go to state 53
    ff            go to state 54
    gg            go to state 55
    hh            go to state 56


State 84

   28 else_if: if_clause statements . ELSE
   29 bb: if_clause statements . ENDIF

    ENDIF  shift, and go to state 123
    ELSE   shift, and go to state 124


State 85

   30 bb: else_if statements . ENDIF

    ENDIF  shift, and go to state 125


State 86

   32 while_clause: while_key boolean_expr . BEGINLOOP
   48 boolean_expr: boolean_expr . OR relation_exprr

    BEGINLOOP  shift, and go to state 126
    OR         shift, and go to state 99


State 87

   33 cc: while_clause statements . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 88

   35 do_check: do_key statements . ENDLOOP

    ENDLOOP  shift, and go to state 128


State 89

   36 dd: do_check WHILE . boolean_expr

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    boolean_expr    go to state 129
    relation_exprr  go to state 66
    relation_expr   go to state 67
    rexpr           go to state 68
    expression      go to state 69
    mul_expr        go to state 70
    term            go to state 71
    posterm         go to state 72
    var             go to state 73


State 90

   14 assign: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (assign)


State 91

   52 relation_expr: NOT rexpr .

    $default  reduce using rule 52 (relation_expr)


State 92

   48 boolean_expr: boolean_expr . OR relation_exprr
   61 rexpr: L_PAREN boolean_expr . R_PAREN

    OR       shift, and go to state 99
    R_PAREN  shift, and go to state 130


State 93

   53 rexpr: expression . EQ expression
   54      | expression . NEQ expression
   55      | expression . LT expression
   56      | expression . GT expression
   57      | expression . LTE expression
   58      | expression . GTE expression
   76 posterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131
    LT       shift, and go to state 101
    LTE      shift, and go to state 102
    GT       shift, and go to state 103
    GTE      shift, and go to state 104
    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106


State 94

   77 term_iden: L_PAREN . term_ex R_PAREN
   78          | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 76
    R_PAREN  shift, and go to state 132
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 133
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    term_ex     go to state 134
    var         go to state 73


State 95

   82 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 135
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 96

   73 term: IDENT term_iden .

    $default  reduce using rule 73 (term)


State 97

   72 term: SUB posterm .

    $default  reduce using rule 72 (term)


State 98

   27 if_clause: IF boolean_expr THEN .

    $default  reduce using rule 27 (if_clause)


State 99

   48 boolean_expr: boolean_expr OR . relation_exprr

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    relation_exprr  go to state 136
    relation_expr   go to state 67
    rexpr           go to state 68
    expression      go to state 69
    mul_expr        go to state 70
    term            go to state 71
    posterm         go to state 72
    var             go to state 73


State 100

   50 relation_exprr: relation_exprr AND . relation_expr

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    NOT      shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    relation_expr  go to state 137
    rexpr          go to state 68
    expression     go to state 69
    mul_expr       go to state 70
    term           go to state 71
    posterm        go to state 72
    var            go to state 73


State 101

   55 rexpr: expression LT . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 138
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 102

   57 rexpr: expression LTE . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 139
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 103

   56 rexpr: expression GT . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 140
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 104

   58 rexpr: expression GTE . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 141
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 105

   53 rexpr: expression EQ . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 142
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 106

   54 rexpr: expression NEQ . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 143
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 107

   64 expradd: ADD . mul_expr expradd

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    mul_expr  go to state 144
    term      go to state 71
    posterm   go to state 72
    var       go to state 73


State 108

   65 expradd: SUB . mul_expr expradd

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    mul_expr  go to state 145
    term      go to state 71
    posterm   go to state 72
    var       go to state 73


State 109

   62 expression: mul_expr expradd .

    $default  reduce using rule 62 (expression)


State 110

   68 multi_term: MULT . term multi_term

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term     go to state 146
    posterm  go to state 72
    var      go to state 73


State 111

   69 multi_term: DIV . term multi_term

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term     go to state 147
    posterm  go to state 72
    var      go to state 73


State 112

   70 multi_term: MOD . term multi_term

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term     go to state 148
    posterm  go to state 72
    var      go to state 73


State 113

   66 mul_expr: term multi_term .

    $default  reduce using rule 66 (mul_expr)


State 114

   37 read_mult: COMMA . IDENT read_mult
   38          | COMMA . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    IDENT  shift, and go to state 149


State 115

   41 ee: READ IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 150
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 116

   40 ee: READ IDENT read_mult .

    $default  reduce using rule 40 (ee)


State 117

   76 posterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 118

   43 ii: COMMA . posterm ii

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 77

    posterm  go to state 151
    var      go to state 73


State 119

   44 ff: WRITE posterm ii .

    $default  reduce using rule 44 (ff)


State 120

   26 aa: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 152


State 121

   25 aa: IDENT ASSIGN expression .

    $default  reduce using rule 25 (aa)


State 122

   15 statements: statement SEMICOLON statements .

    $default  reduce using rule 15 (statements)


State 123

   29 bb: if_clause statements ENDIF .

    $default  reduce using rule 29 (bb)


State 124

   28 else_if: if_clause statements ELSE .

    $default  reduce using rule 28 (else_if)


State 125

   30 bb: else_if statements ENDIF .

    $default  reduce using rule 30 (bb)


State 126

   32 while_clause: while_key boolean_expr BEGINLOOP .

    $default  reduce using rule 32 (while_clause)


State 127

   33 cc: while_clause statements ENDLOOP .

    $default  reduce using rule 33 (cc)


State 128

   35 do_check: do_key statements ENDLOOP .

    $default  reduce using rule 35 (do_check)


State 129

   36 dd: do_check WHILE boolean_expr .
   48 boolean_expr: boolean_expr . OR relation_exprr

    OR  shift, and go to state 99

    $default  reduce using rule 36 (dd)


State 130

   61 rexpr: L_PAREN boolean_expr R_PAREN .

    $default  reduce using rule 61 (rexpr)


State 131

   76 posterm: L_PAREN expression R_PAREN .

    $default  reduce using rule 76 (posterm)


State 132

   78 term_iden: L_PAREN R_PAREN .

    $default  reduce using rule 78 (term_iden)


State 133

   79 term_ex: expression .
   80        | expression . COMMA term_ex

    COMMA  shift, and go to state 153

    $default  reduce using rule 79 (term_ex)


State 134

   77 term_iden: L_PAREN term_ex . R_PAREN

    R_PAREN  shift, and go to state 154


State 135

   82 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 155


State 136

   48 boolean_expr: boolean_expr OR relation_exprr .
   50 relation_exprr: relation_exprr . AND relation_expr

    AND  shift, and go to state 100

    $default  reduce using rule 48 (boolean_expr)


State 137

   50 relation_exprr: relation_exprr AND relation_expr .

    $default  reduce using rule 50 (relation_exprr)


State 138

   55 rexpr: expression LT expression .

    $default  reduce using rule 55 (rexpr)


State 139

   57 rexpr: expression LTE expression .

    $default  reduce using rule 57 (rexpr)


State 140

   56 rexpr: expression GT expression .

    $default  reduce using rule 56 (rexpr)


State 141

   58 rexpr: expression GTE expression .

    $default  reduce using rule 58 (rexpr)


State 142

   53 rexpr: expression EQ expression .

    $default  reduce using rule 53 (rexpr)


State 143

   54 rexpr: expression NEQ expression .

    $default  reduce using rule 54 (rexpr)


State 144

   64 expradd: ADD mul_expr . expradd

    ADD  shift, and go to state 107
    SUB  shift, and go to state 108

    $default  reduce using rule 63 (expradd)

    expradd  go to state 156


State 145

   65 expradd: SUB mul_expr . expradd

    ADD  shift, and go to state 107
    SUB  shift, and go to state 108

    $default  reduce using rule 63 (expradd)

    expradd  go to state 157


State 146

   68 multi_term: MULT term . multi_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 67 (multi_term)

    multi_term  go to state 158


State 147

   69 multi_term: DIV term . multi_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 67 (multi_term)

    multi_term  go to state 159


State 148

   70 multi_term: MOD term . multi_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 67 (multi_term)

    multi_term  go to state 160


State 149

   37 read_mult: COMMA IDENT . read_mult
   38          | COMMA IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult

    COMMA             shift, and go to state 114
    L_SQUARE_BRACKET  shift, and go to state 161

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 162


State 150

   41 ee: READ IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 163


State 151

   43 ii: COMMA posterm . ii

    COMMA  shift, and go to state 118

    $default  reduce using rule 42 (ii)

    ii  go to state 164


State 152

   26 aa: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 165


State 153

   80 term_ex: expression COMMA . term_ex

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 133
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    term_ex     go to state 166
    var         go to state 73


State 154

   77 term_iden: L_PAREN term_ex R_PAREN .

    $default  reduce using rule 77 (term_iden)


State 155

   82 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 82 (var)


State 156

   64 expradd: ADD mul_expr expradd .

    $default  reduce using rule 64 (expradd)


State 157

   65 expradd: SUB mul_expr expradd .

    $default  reduce using rule 65 (expradd)


State 158

   68 multi_term: MULT term multi_term .

    $default  reduce using rule 68 (multi_term)


State 159

   69 multi_term: DIV term multi_term .

    $default  reduce using rule 69 (multi_term)


State 160

   70 multi_term: MOD term multi_term .

    $default  reduce using rule 70 (multi_term)


State 161

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET read_mult

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 167
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 162

   37 read_mult: COMMA IDENT read_mult .

    $default  reduce using rule 37 (read_mult)


State 163

   41 ee: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 114

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 168


State 164

   43 ii: COMMA posterm ii .

    $default  reduce using rule 43 (ii)


State 165

   26 aa: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 62
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression  go to state 169
    mul_expr    go to state 70
    term        go to state 71
    posterm     go to state 72
    var         go to state 73


State 166

   80 term_ex: expression COMMA term_ex .

    $default  reduce using rule 80 (term_ex)


State 167

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET read_mult

    R_SQUARE_BRACKET  shift, and go to state 170


State 168

   41 ee: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 41 (ee)


State 169

   26 aa: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 26 (aa)


State 170

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . read_mult

    COMMA  shift, and go to state 114

    $default  reduce using rule 39 (read_mult)

    read_mult  go to state 171


State 171

   38 read_mult: COMMA IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET read_mult .

    $default  reduce using rule 38 (read_mult)
