Terminals unused in grammar

   token


State 85 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 $@1: %empty

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY
    6         | error

    7 Declaration1: %empty
    8             | Declaration SEMICOLON Declaration1

    9 Declaration: Identifier COLON Type
   10            | error

   11 Statement1: Statement SEMICOLON Statement1
   12           | Statement SEMICOLON

   13 Identifier: IDENT
   14           | IDENT COMMA Identifier

   15 Type: INTEGER
   16     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 Statement: Var ASSIGN Expression
   18          | if_rule
   19          | while_rule
   20          | do_while_rule
   21          | read_in
   22          | WRITE write_to
   23          | CONTINUE
   24          | RETURN Expression
   25          | error

   26 if_rule: if_condition Statement1 ENDIF
   27        | else_condition Statement1 ENDIF

   28 if_condition: IF Bool-Expr THEN

   29 else_condition: if_condition Statement1 ELSE

   30 while_rule: while_condition Statement1 ENDLOOP

   31 while_condition: WHILE Bool-Expr BEGINLOOP

   32 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

   33 read_in: READ IDENT comma_mult
   34        | READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult

   35 comma_mult: COMMA IDENT comma_mult
   36           | COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult
   37           | %empty

   38 write_to: Var
   39         | NUMBER
   40         | L_PAREN Expression R_PAREN

   41 Bool-Expr: Relation_Exprs
   42          | Bool-Expr OR Relation_And_Expr

   43 Relation_And_Expr: Relation_Exprs
   44                  | Relation_And_Expr AND Relation_Exprs

   45 Relation_Exprs: NOT Relation_Expr
   46               | Relation_Expr

   47 Relation_Expr: Expression EQ Expression
   48              | Expression NEQ Expression
   49              | Expression LT Expression
   50              | Expression GT Expression
   51              | Expression LTE Expression
   52              | Expression GTE Expression
   53              | TRUE
   54              | FALSE
   55              | L_PAREN Bool-Expr R_PAREN

   56 Expression: Multiplicative-Expr ADD Expression
   57           | Multiplicative-Expr SUB Expression
   58           | Multiplicative-Expr

   59 Term_Mult-Expr: Term Multiplicative-Expr

   60 Multiplicative-Expr: %empty
   61                    | MULT Term Term_Mult-Expr
   62                    | DIV Term Term_Mult-Expr
   63                    | MOD Term Term_Mult-Expr

   64 Term: Normal
   65     | SUB Normal
   66     | IDENT Term_1

   67 Term_1: L_PAREN Expression1 R_PAREN
   68       | L_PAREN R_PAREN

   69 Normal: Var
   70       | NUMBER
   71       | L_PAREN Expression1 R_PAREN

   72 Expression1: Expression
   73            | Expression COMMA Expression1

   74 Var: IDENT
   75    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 6 10 25
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_BODY (261) 5
token (262)
END_BODY (263) 5
BEGIN_LOCALS (264) 5
END_LOCALS (265) 5
INTEGER (266) 15 16
ARRAY (267) 16
OF (268) 16
IF (269) 28
THEN (270) 28
ENDIF (271) 26 27
ELSE (272) 29
WHILE (273) 31 32
DO (274) 32
BEGINLOOP (275) 31 32
ENDLOOP (276) 30 32
CONTINUE (277) 23
READ (278) 33 34
WRITE (279) 22
TRUE (280) 53
FALSE (281) 54
AND (282) 44
OR (283) 42
NOT (284) 45
SEMICOLON (285) 5 8 11 12
COLON (286) 9
COMMA (287) 14 35 36 73
L_PAREN (288) 40 55 67 68 71
R_PAREN (289) 40 55 67 68 71
L_SQUARE_BRACKET (290) 16 34 36 75
R_SQUARE_BRACKET (291) 16 34 36 75
ASSIGN (292) 17
RETURN (293) 24
NUMBER (294) 16 39 70
IDENT (295) 5 13 14 33 34 35 36 66 74 75
MULT (296) 61
DIV (297) 62
MOD (298) 63
ADD (299) 56
SUB (300) 57 65
LT (301) 49
LTE (302) 51
GT (303) 50
GTE (304) 52
EQ (305) 47
NEQ (306) 48


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
Function (55)
    on left: 5 6, on right: 3
$@1 (56)
    on left: 4, on right: 5
Declaration1 (57)
    on left: 7 8, on right: 5 8
Declaration (58)
    on left: 9 10, on right: 8
Statement1 (59)
    on left: 11 12, on right: 5 11 26 27 29 30 32
Identifier (60)
    on left: 13 14, on right: 9 14
Type (61)
    on left: 15 16, on right: 9
Statement (62)
    on left: 17 18 19 20 21 22 23 24 25, on right: 11 12
if_rule (63)
    on left: 26 27, on right: 18
if_condition (64)
    on left: 28, on right: 26 29
else_condition (65)
    on left: 29, on right: 27
while_rule (66)
    on left: 30, on right: 19
while_condition (67)
    on left: 31, on right: 30
do_while_rule (68)
    on left: 32, on right: 20
read_in (69)
    on left: 33 34, on right: 21
comma_mult (70)
    on left: 35 36 37, on right: 33 34 35 36
write_to (71)
    on left: 38 39 40, on right: 22
Bool-Expr (72)
    on left: 41 42, on right: 28 31 32 42 55
Relation_And_Expr (73)
    on left: 43 44, on right: 42 44
Relation_Exprs (74)
    on left: 45 46, on right: 41 43 44
Relation_Expr (75)
    on left: 47 48 49 50 51 52 53 54 55, on right: 45 46
Expression (76)
    on left: 56 57 58, on right: 17 24 34 36 40 47 48 49 50 51 52 56
    57 72 73 75
Term_Mult-Expr (77)
    on left: 59, on right: 61 62 63
Multiplicative-Expr (78)
    on left: 60 61 62 63, on right: 56 57 58 59
Term (79)
    on left: 64 65 66, on right: 59 61 62 63
Term_1 (80)
    on left: 67 68, on right: 66
Normal (81)
    on left: 69 70 71, on right: 64 65
Expression1 (82)
    on left: 72 73, on right: 67 71 73
Var (83)
    on left: 74 75, on right: 17 38 69


State 0

    0 $accept: . Program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Program    go to state 3
    Functions  go to state 4
    Function   go to state 5


State 1

    6 Function: error .

    $default  reduce using rule 6 (Function)


State 2

    5 Function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 4

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 5

    3 Functions: Function . Functions

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 5


State 6

    5 Function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 9

    5 Function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    5 Function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 14
    Declaration   go to state 15
    Identifier    go to state 16


State 12

   10 Declaration: error .

    $default  reduce using rule 10 (Declaration)


State 13

   13 Identifier: IDENT .
   14           | IDENT . COMMA Identifier

    COMMA  shift, and go to state 17

    $default  reduce using rule 13 (Identifier)


State 14

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 . END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    8 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 16

    9 Declaration: Identifier . COLON Type

    COLON  shift, and go to state 20


State 17

   14 Identifier: IDENT COMMA . Identifier

    IDENT  shift, and go to state 13

    Identifier  go to state 21


State 18

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 Declaration1: Declaration SEMICOLON . Declaration1

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)
    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 15
    Identifier    go to state 16


State 20

    9 Declaration: Identifier COLON . Type

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    Type  go to state 26


State 21

   14 Identifier: IDENT COMMA Identifier .

    $default  reduce using rule 14 (Identifier)


State 22

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 27
    Declaration   go to state 15
    Identifier    go to state 16


State 23

    8 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 8 (Declaration1)


State 24

   15 Type: INTEGER .

    $default  reduce using rule 15 (Type)


State 25

   16 Type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

    9 Declaration: Identifier COLON Type .

    $default  reduce using rule 9 (Declaration)


State 27

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   16 Type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1       go to state 42
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 32

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 52


State 33

   25 Statement: error .

    $default  reduce using rule 25 (Statement)


State 34

   28 if_condition: IF . Bool-Expr THEN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Bool-Expr            go to state 60
    Relation_Exprs       go to state 61
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 35

   31 while_condition: WHILE . Bool-Expr BEGINLOOP

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Bool-Expr            go to state 65
    Relation_Exprs       go to state 61
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 36

   32 do_while_rule: DO . BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 66


State 37

   23 Statement: CONTINUE .

    $default  reduce using rule 23 (Statement)


State 38

   33 read_in: READ . IDENT comma_mult
   34        | READ . IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult

    IDENT  shift, and go to state 67


State 39

   22 Statement: WRITE . write_to

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 69
    IDENT    shift, and go to state 41

    write_to  go to state 70
    Var       go to state 71


State 40

   24 Statement: RETURN . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 72
    Multiplicative-Expr  go to state 64


State 41

   74 Var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 74 (Var)


State 42

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 74


State 43

   11 Statement1: Statement . SEMICOLON Statement1
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 44

   18 Statement: if_rule .

    $default  reduce using rule 18 (Statement)


State 45

   26 if_rule: if_condition . Statement1 ENDIF
   29 else_condition: if_condition . Statement1 ELSE

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1       go to state 76
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 46

   27 if_rule: else_condition . Statement1 ENDIF

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1       go to state 77
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 47

   19 Statement: while_rule .

    $default  reduce using rule 19 (Statement)


State 48

   30 while_rule: while_condition . Statement1 ENDLOOP

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1       go to state 78
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 49

   20 Statement: do_while_rule .

    $default  reduce using rule 20 (Statement)


State 50

   21 Statement: read_in .

    $default  reduce using rule 21 (Statement)


State 51

   17 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 79


State 52

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 80


State 53

   53 Relation_Expr: TRUE .

    $default  reduce using rule 53 (Relation_Expr)


State 54

   54 Relation_Expr: FALSE .

    $default  reduce using rule 54 (Relation_Expr)


State 55

   45 Relation_Exprs: NOT . Relation_Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Relation_Expr        go to state 81
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 56

   55 Relation_Expr: L_PAREN . Bool-Expr R_PAREN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Bool-Expr            go to state 82
    Relation_Exprs       go to state 61
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 57

   61 Multiplicative-Expr: MULT . Term Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term    go to state 87
    Normal  go to state 88
    Var     go to state 89


State 58

   62 Multiplicative-Expr: DIV . Term Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term    go to state 90
    Normal  go to state 88
    Var     go to state 89


State 59

   63 Multiplicative-Expr: MOD . Term Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term    go to state 91
    Normal  go to state 88
    Var     go to state 89


State 60

   28 if_condition: IF Bool-Expr . THEN
   42 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    THEN  shift, and go to state 92
    OR    shift, and go to state 93


State 61

   41 Bool-Expr: Relation_Exprs .

    $default  reduce using rule 41 (Bool-Expr)


State 62

   46 Relation_Exprs: Relation_Expr .

    $default  reduce using rule 46 (Relation_Exprs)


State 63

   47 Relation_Expr: Expression . EQ Expression
   48              | Expression . NEQ Expression
   49              | Expression . LT Expression
   50              | Expression . GT Expression
   51              | Expression . LTE Expression
   52              | Expression . GTE Expression

    LT   shift, and go to state 94
    LTE  shift, and go to state 95
    GT   shift, and go to state 96
    GTE  shift, and go to state 97
    EQ   shift, and go to state 98
    NEQ  shift, and go to state 99


State 64

   56 Expression: Multiplicative-Expr . ADD Expression
   57           | Multiplicative-Expr . SUB Expression
   58           | Multiplicative-Expr .

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101

    $default  reduce using rule 58 (Expression)


State 65

   31 while_condition: WHILE Bool-Expr . BEGINLOOP
   42 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    BEGINLOOP  shift, and go to state 102
    OR         shift, and go to state 93


State 66

   32 do_while_rule: DO BEGINLOOP . Statement1 ENDLOOP WHILE Bool-Expr

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1       go to state 103
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 67

   33 read_in: READ IDENT . comma_mult
   34        | READ IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult

    COMMA             shift, and go to state 104
    L_SQUARE_BRACKET  shift, and go to state 105

    $default  reduce using rule 37 (comma_mult)

    comma_mult  go to state 106


State 68

   40 write_to: L_PAREN . Expression R_PAREN

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 107
    Multiplicative-Expr  go to state 64


State 69

   39 write_to: NUMBER .

    $default  reduce using rule 39 (write_to)


State 70

   22 Statement: WRITE write_to .

    $default  reduce using rule 22 (Statement)


State 71

   38 write_to: Var .

    $default  reduce using rule 38 (write_to)


State 72

   24 Statement: RETURN Expression .

    $default  reduce using rule 24 (Statement)


State 73

   75 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 108
    Multiplicative-Expr  go to state 64


State 74

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 5 (Function)


State 75

   11 Statement1: Statement SEMICOLON . Statement1
   12           | Statement SEMICOLON .

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    END_BODY  reduce using rule 12 (Statement1)
    ENDIF     reduce using rule 12 (Statement1)
    ELSE      reduce using rule 12 (Statement1)
    ENDLOOP   reduce using rule 12 (Statement1)

    Statement1       go to state 109
    Statement        go to state 43
    if_rule          go to state 44
    if_condition     go to state 45
    else_condition   go to state 46
    while_rule       go to state 47
    while_condition  go to state 48
    do_while_rule    go to state 49
    read_in          go to state 50
    Var              go to state 51


State 76

   26 if_rule: if_condition Statement1 . ENDIF
   29 else_condition: if_condition Statement1 . ELSE

    ENDIF  shift, and go to state 110
    ELSE   shift, and go to state 111


State 77

   27 if_rule: else_condition Statement1 . ENDIF

    ENDIF  shift, and go to state 112


State 78

   30 while_rule: while_condition Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 113


State 79

   17 Statement: Var ASSIGN . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 114
    Multiplicative-Expr  go to state 64


State 80

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (Type)


State 81

   45 Relation_Exprs: NOT Relation_Expr .

    $default  reduce using rule 45 (Relation_Exprs)


State 82

   42 Bool-Expr: Bool-Expr . OR Relation_And_Expr
   55 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    OR       shift, and go to state 93
    R_PAREN  shift, and go to state 115


State 83

   71 Normal: L_PAREN . Expression1 R_PAREN

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 116
    Multiplicative-Expr  go to state 64
    Expression1          go to state 117


State 84

   70 Normal: NUMBER .

    $default  reduce using rule 70 (Normal)


State 85

   66 Term: IDENT . Term_1
   74 Var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 118
    L_SQUARE_BRACKET  shift, and go to state 73

    L_PAREN   [reduce using rule 74 (Var)]
    $default  reduce using rule 74 (Var)

    Term_1  go to state 119


State 86

   65 Term: SUB . Normal

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 41

    Normal  go to state 120
    Var     go to state 89


State 87

   61 Multiplicative-Expr: MULT Term . Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term_Mult-Expr  go to state 121
    Term            go to state 122
    Normal          go to state 88
    Var             go to state 89


State 88

   64 Term: Normal .

    $default  reduce using rule 64 (Term)


State 89

   69 Normal: Var .

    $default  reduce using rule 69 (Normal)


State 90

   62 Multiplicative-Expr: DIV Term . Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term_Mult-Expr  go to state 123
    Term            go to state 122
    Normal          go to state 88
    Var             go to state 89


State 91

   63 Multiplicative-Expr: MOD Term . Term_Mult-Expr

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 85
    SUB      shift, and go to state 86

    Term_Mult-Expr  go to state 124
    Term            go to state 122
    Normal          go to state 88
    Var             go to state 89


State 92

   28 if_condition: IF Bool-Expr THEN .

    $default  reduce using rule 28 (if_condition)


State 93

   42 Bool-Expr: Bool-Expr OR . Relation_And_Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Relation_And_Expr    go to state 125
    Relation_Exprs       go to state 126
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 94

   49 Relation_Expr: Expression LT . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 127
    Multiplicative-Expr  go to state 64


State 95

   51 Relation_Expr: Expression LTE . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 128
    Multiplicative-Expr  go to state 64


State 96

   50 Relation_Expr: Expression GT . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 129
    Multiplicative-Expr  go to state 64


State 97

   52 Relation_Expr: Expression GTE . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 130
    Multiplicative-Expr  go to state 64


State 98

   47 Relation_Expr: Expression EQ . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 131
    Multiplicative-Expr  go to state 64


State 99

   48 Relation_Expr: Expression NEQ . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 132
    Multiplicative-Expr  go to state 64


State 100

   56 Expression: Multiplicative-Expr ADD . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 133
    Multiplicative-Expr  go to state 64


State 101

   57 Expression: Multiplicative-Expr SUB . Expression

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 134
    Multiplicative-Expr  go to state 64


State 102

   31 while_condition: WHILE Bool-Expr BEGINLOOP .

    $default  reduce using rule 31 (while_condition)


State 103

   32 do_while_rule: DO BEGINLOOP Statement1 . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 135


State 104

   35 comma_mult: COMMA . IDENT comma_mult
   36           | COMMA . IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult

    IDENT  shift, and go to state 136


State 105

   34 read_in: READ IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET comma_mult

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 137
    Multiplicative-Expr  go to state 64


State 106

   33 read_in: READ IDENT comma_mult .

    $default  reduce using rule 33 (read_in)


State 107

   40 write_to: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 138


State 108

   75 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 139


State 109

   11 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 11 (Statement1)


State 110

   26 if_rule: if_condition Statement1 ENDIF .

    $default  reduce using rule 26 (if_rule)


State 111

   29 else_condition: if_condition Statement1 ELSE .

    $default  reduce using rule 29 (else_condition)


State 112

   27 if_rule: else_condition Statement1 ENDIF .

    $default  reduce using rule 27 (if_rule)


State 113

   30 while_rule: while_condition Statement1 ENDLOOP .

    $default  reduce using rule 30 (while_rule)


State 114

   17 Statement: Var ASSIGN Expression .

    $default  reduce using rule 17 (Statement)


State 115

   55 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 55 (Relation_Expr)


State 116

   72 Expression1: Expression .
   73            | Expression . COMMA Expression1

    COMMA  shift, and go to state 140

    $default  reduce using rule 72 (Expression1)


State 117

   71 Normal: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 141


State 118

   67 Term_1: L_PAREN . Expression1 R_PAREN
   68       | L_PAREN . R_PAREN

    R_PAREN  shift, and go to state 142
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    R_PAREN   [reduce using rule 60 (Multiplicative-Expr)]
    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 116
    Multiplicative-Expr  go to state 64
    Expression1          go to state 143


State 119

   66 Term: IDENT Term_1 .

    $default  reduce using rule 66 (Term)


State 120

   65 Term: SUB Normal .

    $default  reduce using rule 65 (Term)


State 121

   61 Multiplicative-Expr: MULT Term Term_Mult-Expr .

    $default  reduce using rule 61 (Multiplicative-Expr)


State 122

   59 Term_Mult-Expr: Term . Multiplicative-Expr

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Multiplicative-Expr  go to state 144


State 123

   62 Multiplicative-Expr: DIV Term Term_Mult-Expr .

    $default  reduce using rule 62 (Multiplicative-Expr)


State 124

   63 Multiplicative-Expr: MOD Term Term_Mult-Expr .

    $default  reduce using rule 63 (Multiplicative-Expr)


State 125

   42 Bool-Expr: Bool-Expr OR Relation_And_Expr .
   44 Relation_And_Expr: Relation_And_Expr . AND Relation_Exprs

    AND  shift, and go to state 145

    $default  reduce using rule 42 (Bool-Expr)


State 126

   43 Relation_And_Expr: Relation_Exprs .

    $default  reduce using rule 43 (Relation_And_Expr)


State 127

   49 Relation_Expr: Expression LT Expression .

    $default  reduce using rule 49 (Relation_Expr)


State 128

   51 Relation_Expr: Expression LTE Expression .

    $default  reduce using rule 51 (Relation_Expr)


State 129

   50 Relation_Expr: Expression GT Expression .

    $default  reduce using rule 50 (Relation_Expr)


State 130

   52 Relation_Expr: Expression GTE Expression .

    $default  reduce using rule 52 (Relation_Expr)


State 131

   47 Relation_Expr: Expression EQ Expression .

    $default  reduce using rule 47 (Relation_Expr)


State 132

   48 Relation_Expr: Expression NEQ Expression .

    $default  reduce using rule 48 (Relation_Expr)


State 133

   56 Expression: Multiplicative-Expr ADD Expression .

    $default  reduce using rule 56 (Expression)


State 134

   57 Expression: Multiplicative-Expr SUB Expression .

    $default  reduce using rule 57 (Expression)


State 135

   32 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 146


State 136

   35 comma_mult: COMMA IDENT . comma_mult
   36           | COMMA IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult

    COMMA             shift, and go to state 104
    L_SQUARE_BRACKET  shift, and go to state 147

    $default  reduce using rule 37 (comma_mult)

    comma_mult  go to state 148


State 137

   34 read_in: READ IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET comma_mult

    R_SQUARE_BRACKET  shift, and go to state 149


State 138

   40 write_to: L_PAREN Expression R_PAREN .

    $default  reduce using rule 40 (write_to)


State 139

   75 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 75 (Var)


State 140

   73 Expression1: Expression COMMA . Expression1

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 116
    Multiplicative-Expr  go to state 64
    Expression1          go to state 150


State 141

   71 Normal: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 71 (Normal)


State 142

   68 Term_1: L_PAREN R_PAREN .

    $default  reduce using rule 68 (Term_1)


State 143

   67 Term_1: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 151


State 144

   59 Term_Mult-Expr: Term Multiplicative-Expr .

    $default  reduce using rule 59 (Term_Mult-Expr)


State 145

   44 Relation_And_Expr: Relation_And_Expr AND . Relation_Exprs

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Relation_Exprs       go to state 152
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 146

   32 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE . Bool-Expr

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    MULT     shift, and go to state 57
    DIV      shift, and go to state 58
    MOD      shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Bool-Expr            go to state 153
    Relation_Exprs       go to state 61
    Relation_Expr        go to state 62
    Expression           go to state 63
    Multiplicative-Expr  go to state 64


State 147

   36 comma_mult: COMMA IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET comma_mult

    MULT  shift, and go to state 57
    DIV   shift, and go to state 58
    MOD   shift, and go to state 59

    $default  reduce using rule 60 (Multiplicative-Expr)

    Expression           go to state 154
    Multiplicative-Expr  go to state 64


State 148

   35 comma_mult: COMMA IDENT comma_mult .

    $default  reduce using rule 35 (comma_mult)


State 149

   34 read_in: READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . comma_mult

    COMMA  shift, and go to state 104

    $default  reduce using rule 37 (comma_mult)

    comma_mult  go to state 155


State 150

   73 Expression1: Expression COMMA Expression1 .

    $default  reduce using rule 73 (Expression1)


State 151

   67 Term_1: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 67 (Term_1)


State 152

   44 Relation_And_Expr: Relation_And_Expr AND Relation_Exprs .

    $default  reduce using rule 44 (Relation_And_Expr)


State 153

   32 do_while_rule: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr .
   42 Bool-Expr: Bool-Expr . OR Relation_And_Expr

    OR  shift, and go to state 93

    $default  reduce using rule 32 (do_while_rule)


State 154

   36 comma_mult: COMMA IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET comma_mult

    R_SQUARE_BRACKET  shift, and go to state 156


State 155

   34 read_in: READ IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult .

    $default  reduce using rule 34 (read_in)


State 156

   36 comma_mult: COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . comma_mult

    COMMA  shift, and go to state 104

    $default  reduce using rule 37 (comma_mult)

    comma_mult  go to state 157


State 157

   36 comma_mult: COMMA IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET comma_mult .

    $default  reduce using rule 36 (comma_mult)
