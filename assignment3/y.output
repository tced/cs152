Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    5 Declaration1: %empty
    6             | Declaration SEMICOLON Declaration1

    7 Declaration: Identifier COLON Type

    8 Statement1: Statement SEMICOLON Statement1
    9           | Statement SEMICOLON

   10 Identifier: identifier
   11           | identifier COMMA Identifier

   12 identifier: IDENT

   13 Type: INTEGER
   14     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 Statement: Var1 ASSIGN Expression
   16          | IF-STMT
   17          | WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP
   18          | DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr
   19          | READ Var1
   20          | WRITE Var1
   21          | CONTINUE
   22          | RETURN Expression

   23 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF
   24        | IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

   25 Var1: Var COMMA Var1
   26     | Var

   27 Bool-Expr: Relation_And_Expr
   28          | Relation_And_Expr OR Bool-Expr

   29 Relation_And_Expr: Relation_Exprs
   30                  | Relation_Exprs AND Relation_And_Expr

   31 Relation_Exprs: NOT Relation_Expr
   32               | Relation_Expr

   33 Relation_Expr: Expression Comp Expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN Bool-Expr R_PAREN

   37 Comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LTE
   42     | GTE

   43 Expression: Multiplicative-Expr ADD Expression
   44           | Multiplicative-Expr SUB Expression
   45           | Multiplicative-Expr

   46 Multiplicative-Expr: Term MULT Term
   47                    | Term DIV Term
   48                    | Term MOD Term
   49                    | Term

   50 Term: Normal
   51     | SUB Var
   52     | SUB NUMBER
   53     | SUB L_PAREN Expression R_PAREN
   54     | identifier L_PAREN Expression1 R_PAREN

   55 Normal: Var
   56       | NUMBER
   57       | L_PAREN Expression1 R_PAREN

   58 Expression1: Expression COMMA Expression1
   59            | Expression
   60            | %empty

   61 Var: identifier
   62    | identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_BODY (261) 4
token (262)
END_BODY (263) 4
BEGIN_LOCALS (264) 4
END_LOCALS (265) 4
INTEGER (266) 13 14
ARRAY (267) 14
OF (268) 14
IF (269) 23 24
THEN (270) 23 24
ENDIF (271) 23 24
ELSE (272) 24
WHILE (273) 17 18
DO (274) 18
BEGINLOOP (275) 17 18
ENDLOOP (276) 17 18
CONTINUE (277) 21
READ (278) 19
WRITE (279) 20
TRUE (280) 34
FALSE (281) 35
AND (282) 30
OR (283) 28
NOT (284) 31
SEMICOLON (285) 4 6 8 9
COLON (286) 7
COMMA (287) 11 25 58
L_PAREN (288) 36 53 54 57
R_PAREN (289) 36 53 54 57
L_SQUARE_BRACKET (290) 14 62
R_SQUARE_BRACKET (291) 14 62
ASSIGN (292) 15
RETURN (293) 22
NUMBER (294) 14 52 56
IDENT (295) 12
MULT (296) 46
DIV (297) 47
MOD (298) 48
ADD (299) 43
SUB (300) 44 51 52 53
LT (301) 39
LTE (302) 41
GT (303) 40
GTE (304) 42
EQ (305) 37
NEQ (306) 38


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
Function (55)
    on left: 4, on right: 3
Declaration1 (56)
    on left: 5 6, on right: 4 6
Declaration (57)
    on left: 7, on right: 6
Statement1 (58)
    on left: 8 9, on right: 4 8 17 18 23 24
Identifier (59)
    on left: 10 11, on right: 7 11
identifier (60)
    on left: 12, on right: 4 10 11 54 61 62
Type (61)
    on left: 13 14, on right: 7
Statement (62)
    on left: 15 16 17 18 19 20 21 22, on right: 8 9
IF-STMT (63)
    on left: 23 24, on right: 16
Var1 (64)
    on left: 25 26, on right: 15 19 20 25
Bool-Expr (65)
    on left: 27 28, on right: 17 18 23 24 28 36
Relation_And_Expr (66)
    on left: 29 30, on right: 27 28 30
Relation_Exprs (67)
    on left: 31 32, on right: 29 30
Relation_Expr (68)
    on left: 33 34 35 36, on right: 31 32
Comp (69)
    on left: 37 38 39 40 41 42, on right: 33
Expression (70)
    on left: 43 44 45, on right: 15 22 33 43 44 53 58 59 62
Multiplicative-Expr (71)
    on left: 46 47 48 49, on right: 43 44 45
Term (72)
    on left: 50 51 52 53 54, on right: 46 47 48 49
Normal (73)
    on left: 55 56 57, on right: 50
Expression1 (74)
    on left: 58 59 60, on right: 54 57 58
Var (75)
    on left: 61 62, on right: 25 26 51 55


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

   12 identifier: IDENT .

    $default  reduce using rule 12 (identifier)


State 6

    4 Function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 9

    4 Function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Declaration1)

    Declaration1  go to state 11
    Declaration   go to state 12
    Identifier    go to state 13
    identifier    go to state 14


State 11

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 . END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 16


State 13

    7 Declaration: Identifier . COLON Type

    COLON  shift, and go to state 17


State 14

   10 Identifier: identifier .
   11           | identifier . COMMA Identifier

    COMMA  shift, and go to state 18

    $default  reduce using rule 10 (Identifier)


State 15

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 Declaration1: Declaration SEMICOLON . Declaration1

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Declaration1)

    Declaration1  go to state 20
    Declaration   go to state 12
    Identifier    go to state 13
    identifier    go to state 14


State 17

    7 Declaration: Identifier COLON . Type

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    Type  go to state 23


State 18

   11 Identifier: identifier COMMA . Identifier

    IDENT  shift, and go to state 5

    Identifier  go to state 24
    identifier  go to state 14


State 19

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (Declaration1)

    Declaration1  go to state 25
    Declaration   go to state 12
    Identifier    go to state 13
    identifier    go to state 14


State 20

    6 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 6 (Declaration1)


State 21

   13 Type: INTEGER .

    $default  reduce using rule 13 (Type)


State 22

   14 Type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    7 Declaration: Identifier COLON Type .

    $default  reduce using rule 7 (Declaration)


State 24

   11 Identifier: identifier COMMA Identifier .

    $default  reduce using rule 11 (Identifier)


State 25

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   14 Type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    Statement1  go to state 38
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 30

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 31

   23 IF-STMT: IF . Bool-Expr THEN Statement1 ENDIF
   24        | IF . Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Bool-Expr            go to state 52
    Relation_And_Expr    go to state 53
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 32

   17 Statement: WHILE . Bool-Expr BEGINLOOP Statement1 ENDLOOP

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Bool-Expr            go to state 61
    Relation_And_Expr    go to state 53
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 33

   18 Statement: DO . BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 62


State 34

   21 Statement: CONTINUE .

    $default  reduce using rule 21 (Statement)


State 35

   19 Statement: READ . Var1

    IDENT  shift, and go to state 5

    identifier  go to state 39
    Var1        go to state 63
    Var         go to state 43


State 36

   20 Statement: WRITE . Var1

    IDENT  shift, and go to state 5

    identifier  go to state 39
    Var1        go to state 64
    Var         go to state 43


State 37

   22 Statement: RETURN . Expression

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 66
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 38

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 67


State 39

   61 Var: identifier .
   62    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 61 (Var)


State 40

    8 Statement1: Statement . SEMICOLON Statement1
    9           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 41

   16 Statement: IF-STMT .

    $default  reduce using rule 16 (Statement)


State 42

   15 Statement: Var1 . ASSIGN Expression

    ASSIGN  shift, and go to state 70


State 43

   25 Var1: Var . COMMA Var1
   26     | Var .

    COMMA  shift, and go to state 71

    $default  reduce using rule 26 (Var1)


State 44

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   34 Relation_Expr: TRUE .

    $default  reduce using rule 34 (Relation_Expr)


State 46

   35 Relation_Expr: FALSE .

    $default  reduce using rule 35 (Relation_Expr)


State 47

   31 Relation_Exprs: NOT . Relation_Expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Relation_Expr        go to state 73
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 48

   36 Relation_Expr: L_PAREN . Bool-Expr R_PAREN
   57 Normal: L_PAREN . Expression1 R_PAREN

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    $default  reduce using rule 60 (Expression1)

    identifier           go to state 51
    Bool-Expr            go to state 74
    Relation_And_Expr    go to state 53
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 75
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Expression1          go to state 76
    Var                  go to state 60


State 49

   56 Normal: NUMBER .

    $default  reduce using rule 56 (Normal)


State 50

   51 Term: SUB . Var
   52     | SUB . NUMBER
   53     | SUB . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 78
    IDENT    shift, and go to state 5

    identifier  go to state 39
    Var         go to state 79


State 51

   54 Term: identifier . L_PAREN Expression1 R_PAREN
   61 Var: identifier .
   62    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 61 (Var)


State 52

   23 IF-STMT: IF Bool-Expr . THEN Statement1 ENDIF
   24        | IF Bool-Expr . THEN Statement1 ELSE Statement1 ENDIF

    THEN  shift, and go to state 81


State 53

   27 Bool-Expr: Relation_And_Expr .
   28          | Relation_And_Expr . OR Bool-Expr

    OR  shift, and go to state 82

    $default  reduce using rule 27 (Bool-Expr)


State 54

   29 Relation_And_Expr: Relation_Exprs .
   30                  | Relation_Exprs . AND Relation_And_Expr

    AND  shift, and go to state 83

    $default  reduce using rule 29 (Relation_And_Expr)


State 55

   32 Relation_Exprs: Relation_Expr .

    $default  reduce using rule 32 (Relation_Exprs)


State 56

   33 Relation_Expr: Expression . Comp Expression

    LT   shift, and go to state 84
    LTE  shift, and go to state 85
    GT   shift, and go to state 86
    GTE  shift, and go to state 87
    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89

    Comp  go to state 90


State 57

   43 Expression: Multiplicative-Expr . ADD Expression
   44           | Multiplicative-Expr . SUB Expression
   45           | Multiplicative-Expr .

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 45 (Expression)


State 58

   46 Multiplicative-Expr: Term . MULT Term
   47                    | Term . DIV Term
   48                    | Term . MOD Term
   49                    | Term .

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 49 (Multiplicative-Expr)


State 59

   50 Term: Normal .

    $default  reduce using rule 50 (Term)


State 60

   55 Normal: Var .

    $default  reduce using rule 55 (Normal)


State 61

   17 Statement: WHILE Bool-Expr . BEGINLOOP Statement1 ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 62

   18 Statement: DO BEGINLOOP . Statement1 ENDLOOP WHILE Bool-Expr

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    Statement1  go to state 97
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 63

   19 Statement: READ Var1 .

    $default  reduce using rule 19 (Statement)


State 64

   20 Statement: WRITE Var1 .

    $default  reduce using rule 20 (Statement)


State 65

   57 Normal: L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    $default  reduce using rule 60 (Expression1)

    identifier           go to state 51
    Expression           go to state 98
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Expression1          go to state 76
    Var                  go to state 60


State 66

   22 Statement: RETURN Expression .

    $default  reduce using rule 22 (Statement)


State 67

    4 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 4 (Function)


State 68

   62 Var: identifier L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 99
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 69

    8 Statement1: Statement SEMICOLON . Statement1
    9           | Statement SEMICOLON .

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    $default  reduce using rule 9 (Statement1)

    Statement1  go to state 100
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 70

   15 Statement: Var1 ASSIGN . Expression

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 101
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 71

   25 Var1: Var COMMA . Var1

    IDENT  shift, and go to state 5

    identifier  go to state 39
    Var1        go to state 102
    Var         go to state 43


State 72

   14 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (Type)


State 73

   31 Relation_Exprs: NOT Relation_Expr .

    $default  reduce using rule 31 (Relation_Exprs)


State 74

   36 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 103


State 75

   33 Relation_Expr: Expression . Comp Expression
   58 Expression1: Expression . COMMA Expression1
   59            | Expression .

    COMMA  shift, and go to state 104
    LT     shift, and go to state 84
    LTE    shift, and go to state 85
    GT     shift, and go to state 86
    GTE    shift, and go to state 87
    EQ     shift, and go to state 88
    NEQ    shift, and go to state 89

    $default  reduce using rule 59 (Expression1)

    Comp  go to state 90


State 76

   57 Normal: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 105


State 77

   53 Term: SUB L_PAREN . Expression R_PAREN

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 106
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 78

   52 Term: SUB NUMBER .

    $default  reduce using rule 52 (Term)


State 79

   51 Term: SUB Var .

    $default  reduce using rule 51 (Term)


State 80

   54 Term: identifier L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    $default  reduce using rule 60 (Expression1)

    identifier           go to state 51
    Expression           go to state 98
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Expression1          go to state 107
    Var                  go to state 60


State 81

   23 IF-STMT: IF Bool-Expr THEN . Statement1 ENDIF
   24        | IF Bool-Expr THEN . Statement1 ELSE Statement1 ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    Statement1  go to state 108
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 82

   28 Bool-Expr: Relation_And_Expr OR . Bool-Expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Bool-Expr            go to state 109
    Relation_And_Expr    go to state 53
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 83

   30 Relation_And_Expr: Relation_Exprs AND . Relation_And_Expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Relation_And_Expr    go to state 110
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 84

   39 Comp: LT .

    $default  reduce using rule 39 (Comp)


State 85

   41 Comp: LTE .

    $default  reduce using rule 41 (Comp)


State 86

   40 Comp: GT .

    $default  reduce using rule 40 (Comp)


State 87

   42 Comp: GTE .

    $default  reduce using rule 42 (Comp)


State 88

   37 Comp: EQ .

    $default  reduce using rule 37 (Comp)


State 89

   38 Comp: NEQ .

    $default  reduce using rule 38 (Comp)


State 90

   33 Relation_Expr: Expression Comp . Expression

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 111
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 91

   43 Expression: Multiplicative-Expr ADD . Expression

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 112
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 92

   44 Expression: Multiplicative-Expr SUB . Expression

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Expression           go to state 113
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 93

   46 Multiplicative-Expr: Term MULT . Term

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier  go to state 51
    Term        go to state 114
    Normal      go to state 59
    Var         go to state 60


State 94

   47 Multiplicative-Expr: Term DIV . Term

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier  go to state 51
    Term        go to state 115
    Normal      go to state 59
    Var         go to state 60


State 95

   48 Multiplicative-Expr: Term MOD . Term

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier  go to state 51
    Term        go to state 116
    Normal      go to state 59
    Var         go to state 60


State 96

   17 Statement: WHILE Bool-Expr BEGINLOOP . Statement1 ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    Statement1  go to state 117
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 97

   18 Statement: DO BEGINLOOP Statement1 . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 118


State 98

   58 Expression1: Expression . COMMA Expression1
   59            | Expression .

    COMMA  shift, and go to state 104

    $default  reduce using rule 59 (Expression1)


State 99

   62 Var: identifier L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 100

    8 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 8 (Statement1)


State 101

   15 Statement: Var1 ASSIGN Expression .

    $default  reduce using rule 15 (Statement)


State 102

   25 Var1: Var COMMA Var1 .

    $default  reduce using rule 25 (Var1)


State 103

   36 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 36 (Relation_Expr)


State 104

   58 Expression1: Expression COMMA . Expression1

    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    $default  reduce using rule 60 (Expression1)

    identifier           go to state 51
    Expression           go to state 98
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Expression1          go to state 120
    Var                  go to state 60


State 105

   57 Normal: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 57 (Normal)


State 106

   53 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 121


State 107

   54 Term: identifier L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 122


State 108

   23 IF-STMT: IF Bool-Expr THEN Statement1 . ENDIF
   24        | IF Bool-Expr THEN Statement1 . ELSE Statement1 ENDIF

    ENDIF  shift, and go to state 123
    ELSE   shift, and go to state 124


State 109

   28 Bool-Expr: Relation_And_Expr OR Bool-Expr .

    $default  reduce using rule 28 (Bool-Expr)


State 110

   30 Relation_And_Expr: Relation_Exprs AND Relation_And_Expr .

    $default  reduce using rule 30 (Relation_And_Expr)


State 111

   33 Relation_Expr: Expression Comp Expression .

    $default  reduce using rule 33 (Relation_Expr)


State 112

   43 Expression: Multiplicative-Expr ADD Expression .

    $default  reduce using rule 43 (Expression)


State 113

   44 Expression: Multiplicative-Expr SUB Expression .

    $default  reduce using rule 44 (Expression)


State 114

   46 Multiplicative-Expr: Term MULT Term .

    $default  reduce using rule 46 (Multiplicative-Expr)


State 115

   47 Multiplicative-Expr: Term DIV Term .

    $default  reduce using rule 47 (Multiplicative-Expr)


State 116

   48 Multiplicative-Expr: Term MOD Term .

    $default  reduce using rule 48 (Multiplicative-Expr)


State 117

   17 Statement: WHILE Bool-Expr BEGINLOOP Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 118

   18 Statement: DO BEGINLOOP Statement1 ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 126


State 119

   62 Var: identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (Var)


State 120

   58 Expression1: Expression COMMA Expression1 .

    $default  reduce using rule 58 (Expression1)


State 121

   53 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 53 (Term)


State 122

   54 Term: identifier L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 54 (Term)


State 123

   23 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF .

    $default  reduce using rule 23 (IF-STMT)


State 124

   24 IF-STMT: IF Bool-Expr THEN Statement1 ELSE . Statement1 ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 5

    Statement1  go to state 127
    identifier  go to state 39
    Statement   go to state 40
    IF-STMT     go to state 41
    Var1        go to state 42
    Var         go to state 43


State 125

   17 Statement: WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP .

    $default  reduce using rule 17 (Statement)


State 126

   18 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE . Bool-Expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NOT      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 50

    identifier           go to state 51
    Bool-Expr            go to state 128
    Relation_And_Expr    go to state 53
    Relation_Exprs       go to state 54
    Relation_Expr        go to state 55
    Expression           go to state 56
    Multiplicative-Expr  go to state 57
    Term                 go to state 58
    Normal               go to state 59
    Var                  go to state 60


State 127

   24 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 . ENDIF

    ENDIF  shift, and go to state 129


State 128

   18 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 18 (Statement)


State 129

   24 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF .

    $default  reduce using rule 24 (IF-STMT)
