Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 $@1: %empty

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY
    6         | error

    7 Declaration1: %empty
    8             | Declaration SEMICOLON Declaration1

    9 Declaration: Identifier COLON Type
   10            | error

   11 Statement1: Statement SEMICOLON Statement1
   12           | Statement SEMICOLON

   13 Identifier: identifier
   14           | identifier COMMA Identifier

   15 identifier: IDENT

   16 Type: INTEGER
   17     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   18 Statement: Var1 ASSIGN Expression
   19          | IF-STMT
   20          | WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP
   21          | DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr
   22          | READ Var1
   23          | WRITE Var1
   24          | CONTINUE
   25          | RETURN Expression
   26          | error

   27 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF
   28        | IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

   29 Var1: Var COMMA Var1
   30     | Var

   31 Bool-Expr: Relation_And_Expr
   32          | Relation_And_Expr OR Bool-Expr

   33 Relation_And_Expr: Relation_Exprs
   34                  | Relation_Exprs AND Relation_And_Expr

   35 Relation_Exprs: NOT Relation_Expr
   36               | Relation_Expr

   37 Relation_Expr: Expression Comp Expression
   38              | TRUE
   39              | FALSE
   40              | L_PAREN Bool-Expr R_PAREN

   41 Comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 Expression: Multiplicative-Expr ADD Expression
   48           | Multiplicative-Expr SUB Expression
   49           | Multiplicative-Expr

   50 Multiplicative-Expr: Term MULT Term
   51                    | Term DIV Term
   52                    | Term MOD Term
   53                    | Term

   54 Term: Normal
   55     | SUB Var
   56     | SUB NUMBER
   57     | SUB L_PAREN Expression R_PAREN
   58     | identifier L_PAREN Expression1 R_PAREN

   59 Normal: Var
   60       | NUMBER
   61       | L_PAREN Expression1 R_PAREN

   62 Expression1: Expression COMMA Expression1
   63            | Expression
   64            | %empty

   65 Var: identifier
   66    | identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 6 10 26
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_BODY (261) 5
token (262)
END_BODY (263) 5
BEGIN_LOCALS (264) 5
END_LOCALS (265) 5
INTEGER (266) 16 17
ARRAY (267) 17
OF (268) 17
IF (269) 27 28
THEN (270) 27 28
ENDIF (271) 27 28
ELSE (272) 28
WHILE (273) 20 21
DO (274) 21
BEGINLOOP (275) 20 21
ENDLOOP (276) 20 21
CONTINUE (277) 24
READ (278) 22
WRITE (279) 23
TRUE (280) 38
FALSE (281) 39
AND (282) 34
OR (283) 32
NOT (284) 35
SEMICOLON (285) 5 8 11 12
COLON (286) 9
COMMA (287) 14 29 62
L_PAREN (288) 40 57 58 61
R_PAREN (289) 40 57 58 61
L_SQUARE_BRACKET (290) 17 66
R_SQUARE_BRACKET (291) 17 66
ASSIGN (292) 18
RETURN (293) 25
NUMBER (294) 17 56 60
IDENT (295) 5 15
MULT (296) 50
DIV (297) 51
MOD (298) 52
ADD (299) 47
SUB (300) 48 55 56 57
LT (301) 43
LTE (302) 45
GT (303) 44
GTE (304) 46
EQ (305) 41
NEQ (306) 42


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
Function (55)
    on left: 5 6, on right: 3
$@1 (56)
    on left: 4, on right: 5
Declaration1 (57)
    on left: 7 8, on right: 5 8
Declaration (58)
    on left: 9 10, on right: 8
Statement1 (59)
    on left: 11 12, on right: 5 11 20 21 27 28
Identifier (60)
    on left: 13 14, on right: 9 14
identifier (61)
    on left: 15, on right: 13 14 58 65 66
Type (62)
    on left: 16 17, on right: 9
Statement (63)
    on left: 18 19 20 21 22 23 24 25 26, on right: 11 12
IF-STMT (64)
    on left: 27 28, on right: 19
Var1 (65)
    on left: 29 30, on right: 18 22 23 29
Bool-Expr (66)
    on left: 31 32, on right: 20 21 27 28 32 40
Relation_And_Expr (67)
    on left: 33 34, on right: 31 32 34
Relation_Exprs (68)
    on left: 35 36, on right: 33 34
Relation_Expr (69)
    on left: 37 38 39 40, on right: 35 36
Comp (70)
    on left: 41 42 43 44 45 46, on right: 37
Expression (71)
    on left: 47 48 49, on right: 18 25 37 47 48 57 62 63 66
Multiplicative-Expr (72)
    on left: 50 51 52 53, on right: 47 48 49
Term (73)
    on left: 54 55 56 57 58, on right: 50 51 52 53
Normal (74)
    on left: 59 60 61, on right: 54
Expression1 (75)
    on left: 62 63 64, on right: 58 61 62
Var (76)
    on left: 65 66, on right: 29 30 55 59


State 0

    0 $accept: . Program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Program    go to state 3
    Functions  go to state 4
    Function   go to state 5


State 1

    6 Function: error .

    $default  reduce using rule 6 (Function)


State 2

    5 Function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 4

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 5

    3 Functions: Function . Functions

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 5


State 6

    5 Function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 9

    5 Function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    5 Function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 14
    Declaration   go to state 15
    Identifier    go to state 16
    identifier    go to state 17


State 12

   10 Declaration: error .

    $default  reduce using rule 10 (Declaration)


State 13

   15 identifier: IDENT .

    $default  reduce using rule 15 (identifier)


State 14

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 . END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    8 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 16

    9 Declaration: Identifier . COLON Type

    COLON  shift, and go to state 20


State 17

   13 Identifier: identifier .
   14           | identifier . COMMA Identifier

    COMMA  shift, and go to state 21

    $default  reduce using rule 13 (Identifier)


State 18

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 Declaration1: Declaration SEMICOLON . Declaration1

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)
    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 15
    Identifier    go to state 16
    identifier    go to state 17


State 20

    9 Declaration: Identifier COLON . Type

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    Type  go to state 26


State 21

   14 Identifier: identifier COMMA . Identifier

    IDENT  shift, and go to state 13

    Identifier  go to state 27
    identifier  go to state 17


State 22

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 28
    Declaration   go to state 15
    Identifier    go to state 16
    identifier    go to state 17


State 23

    8 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 8 (Declaration1)


State 24

   16 Type: INTEGER .

    $default  reduce using rule 16 (Type)


State 25

   17 Type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 26

    9 Declaration: Identifier COLON Type .

    $default  reduce using rule 9 (Declaration)


State 27

   14 Identifier: identifier COMMA Identifier .

    $default  reduce using rule 14 (Identifier)


State 28

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   17 Type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 30

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 32


State 31

   17 Type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 32

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    Statement1  go to state 42
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 33

   17 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 48


State 34

   26 Statement: error .

    $default  reduce using rule 26 (Statement)


State 35

   27 IF-STMT: IF . Bool-Expr THEN Statement1 ENDIF
   28        | IF . Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Bool-Expr            go to state 56
    Relation_And_Expr    go to state 57
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 36

   20 Statement: WHILE . Bool-Expr BEGINLOOP Statement1 ENDLOOP

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Bool-Expr            go to state 65
    Relation_And_Expr    go to state 57
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 37

   21 Statement: DO . BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 66


State 38

   24 Statement: CONTINUE .

    $default  reduce using rule 24 (Statement)


State 39

   22 Statement: READ . Var1

    IDENT  shift, and go to state 13

    identifier  go to state 43
    Var1        go to state 67
    Var         go to state 47


State 40

   23 Statement: WRITE . Var1

    IDENT  shift, and go to state 13

    identifier  go to state 43
    Var1        go to state 68
    Var         go to state 47


State 41

   25 Statement: RETURN . Expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 70
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 42

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 71


State 43

   65 Var: identifier .
   66    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 65 (Var)


State 44

   11 Statement1: Statement . SEMICOLON Statement1
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 45

   19 Statement: IF-STMT .

    $default  reduce using rule 19 (Statement)


State 46

   18 Statement: Var1 . ASSIGN Expression

    ASSIGN  shift, and go to state 74


State 47

   29 Var1: Var . COMMA Var1
   30     | Var .

    COMMA  shift, and go to state 75

    $default  reduce using rule 30 (Var1)


State 48

   17 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 76


State 49

   38 Relation_Expr: TRUE .

    $default  reduce using rule 38 (Relation_Expr)


State 50

   39 Relation_Expr: FALSE .

    $default  reduce using rule 39 (Relation_Expr)


State 51

   35 Relation_Exprs: NOT . Relation_Expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Relation_Expr        go to state 77
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 52

   40 Relation_Expr: L_PAREN . Bool-Expr R_PAREN
   61 Normal: L_PAREN . Expression1 R_PAREN

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    $default  reduce using rule 64 (Expression1)

    identifier           go to state 55
    Bool-Expr            go to state 78
    Relation_And_Expr    go to state 57
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 79
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Expression1          go to state 80
    Var                  go to state 64


State 53

   60 Normal: NUMBER .

    $default  reduce using rule 60 (Normal)


State 54

   55 Term: SUB . Var
   56     | SUB . NUMBER
   57     | SUB . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 81
    NUMBER   shift, and go to state 82
    IDENT    shift, and go to state 13

    identifier  go to state 43
    Var         go to state 83


State 55

   58 Term: identifier . L_PAREN Expression1 R_PAREN
   65 Var: identifier .
   66    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 84
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 65 (Var)


State 56

   27 IF-STMT: IF Bool-Expr . THEN Statement1 ENDIF
   28        | IF Bool-Expr . THEN Statement1 ELSE Statement1 ENDIF

    THEN  shift, and go to state 85


State 57

   31 Bool-Expr: Relation_And_Expr .
   32          | Relation_And_Expr . OR Bool-Expr

    OR  shift, and go to state 86

    $default  reduce using rule 31 (Bool-Expr)


State 58

   33 Relation_And_Expr: Relation_Exprs .
   34                  | Relation_Exprs . AND Relation_And_Expr

    AND  shift, and go to state 87

    $default  reduce using rule 33 (Relation_And_Expr)


State 59

   36 Relation_Exprs: Relation_Expr .

    $default  reduce using rule 36 (Relation_Exprs)


State 60

   37 Relation_Expr: Expression . Comp Expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    Comp  go to state 94


State 61

   47 Expression: Multiplicative-Expr . ADD Expression
   48           | Multiplicative-Expr . SUB Expression
   49           | Multiplicative-Expr .

    ADD  shift, and go to state 95
    SUB  shift, and go to state 96

    $default  reduce using rule 49 (Expression)


State 62

   50 Multiplicative-Expr: Term . MULT Term
   51                    | Term . DIV Term
   52                    | Term . MOD Term
   53                    | Term .

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 53 (Multiplicative-Expr)


State 63

   54 Term: Normal .

    $default  reduce using rule 54 (Term)


State 64

   59 Normal: Var .

    $default  reduce using rule 59 (Normal)


State 65

   20 Statement: WHILE Bool-Expr . BEGINLOOP Statement1 ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 66

   21 Statement: DO BEGINLOOP . Statement1 ENDLOOP WHILE Bool-Expr

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    Statement1  go to state 101
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 67

   22 Statement: READ Var1 .

    $default  reduce using rule 22 (Statement)


State 68

   23 Statement: WRITE Var1 .

    $default  reduce using rule 23 (Statement)


State 69

   61 Normal: L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    $default  reduce using rule 64 (Expression1)

    identifier           go to state 55
    Expression           go to state 102
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Expression1          go to state 80
    Var                  go to state 64


State 70

   25 Statement: RETURN Expression .

    $default  reduce using rule 25 (Statement)


State 71

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 5 (Function)


State 72

   66 Var: identifier L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 103
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 73

   11 Statement1: Statement SEMICOLON . Statement1
   12           | Statement SEMICOLON .

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    END_BODY  reduce using rule 12 (Statement1)
    ENDIF     reduce using rule 12 (Statement1)
    ELSE      reduce using rule 12 (Statement1)
    ENDLOOP   reduce using rule 12 (Statement1)

    Statement1  go to state 104
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 74

   18 Statement: Var1 ASSIGN . Expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 105
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 75

   29 Var1: Var COMMA . Var1

    IDENT  shift, and go to state 13

    identifier  go to state 43
    Var1        go to state 106
    Var         go to state 47


State 76

   17 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 17 (Type)


State 77

   35 Relation_Exprs: NOT Relation_Expr .

    $default  reduce using rule 35 (Relation_Exprs)


State 78

   40 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 107


State 79

   37 Relation_Expr: Expression . Comp Expression
   62 Expression1: Expression . COMMA Expression1
   63            | Expression .

    COMMA  shift, and go to state 108
    LT     shift, and go to state 88
    LTE    shift, and go to state 89
    GT     shift, and go to state 90
    GTE    shift, and go to state 91
    EQ     shift, and go to state 92
    NEQ    shift, and go to state 93

    $default  reduce using rule 63 (Expression1)

    Comp  go to state 94


State 80

   61 Normal: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 109


State 81

   57 Term: SUB L_PAREN . Expression R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 110
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 82

   56 Term: SUB NUMBER .

    $default  reduce using rule 56 (Term)


State 83

   55 Term: SUB Var .

    $default  reduce using rule 55 (Term)


State 84

   58 Term: identifier L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    $default  reduce using rule 64 (Expression1)

    identifier           go to state 55
    Expression           go to state 102
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Expression1          go to state 111
    Var                  go to state 64


State 85

   27 IF-STMT: IF Bool-Expr THEN . Statement1 ENDIF
   28        | IF Bool-Expr THEN . Statement1 ELSE Statement1 ENDIF

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    Statement1  go to state 112
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 86

   32 Bool-Expr: Relation_And_Expr OR . Bool-Expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Bool-Expr            go to state 113
    Relation_And_Expr    go to state 57
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 87

   34 Relation_And_Expr: Relation_Exprs AND . Relation_And_Expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Relation_And_Expr    go to state 114
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 88

   43 Comp: LT .

    $default  reduce using rule 43 (Comp)


State 89

   45 Comp: LTE .

    $default  reduce using rule 45 (Comp)


State 90

   44 Comp: GT .

    $default  reduce using rule 44 (Comp)


State 91

   46 Comp: GTE .

    $default  reduce using rule 46 (Comp)


State 92

   41 Comp: EQ .

    $default  reduce using rule 41 (Comp)


State 93

   42 Comp: NEQ .

    $default  reduce using rule 42 (Comp)


State 94

   37 Relation_Expr: Expression Comp . Expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 115
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 95

   47 Expression: Multiplicative-Expr ADD . Expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 116
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 96

   48 Expression: Multiplicative-Expr SUB . Expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Expression           go to state 117
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 97

   50 Multiplicative-Expr: Term MULT . Term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier  go to state 55
    Term        go to state 118
    Normal      go to state 63
    Var         go to state 64


State 98

   51 Multiplicative-Expr: Term DIV . Term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier  go to state 55
    Term        go to state 119
    Normal      go to state 63
    Var         go to state 64


State 99

   52 Multiplicative-Expr: Term MOD . Term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier  go to state 55
    Term        go to state 120
    Normal      go to state 63
    Var         go to state 64


State 100

   20 Statement: WHILE Bool-Expr BEGINLOOP . Statement1 ENDLOOP

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    Statement1  go to state 121
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 101

   21 Statement: DO BEGINLOOP Statement1 . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 122


State 102

   62 Expression1: Expression . COMMA Expression1
   63            | Expression .

    COMMA  shift, and go to state 108

    $default  reduce using rule 63 (Expression1)


State 103

   66 Var: identifier L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 104

   11 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 11 (Statement1)


State 105

   18 Statement: Var1 ASSIGN Expression .

    $default  reduce using rule 18 (Statement)


State 106

   29 Var1: Var COMMA Var1 .

    $default  reduce using rule 29 (Var1)


State 107

   40 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 40 (Relation_Expr)


State 108

   62 Expression1: Expression COMMA . Expression1

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    $default  reduce using rule 64 (Expression1)

    identifier           go to state 55
    Expression           go to state 102
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Expression1          go to state 124
    Var                  go to state 64


State 109

   61 Normal: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 61 (Normal)


State 110

   57 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 125


State 111

   58 Term: identifier L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 126


State 112

   27 IF-STMT: IF Bool-Expr THEN Statement1 . ENDIF
   28        | IF Bool-Expr THEN Statement1 . ELSE Statement1 ENDIF

    ENDIF  shift, and go to state 127
    ELSE   shift, and go to state 128


State 113

   32 Bool-Expr: Relation_And_Expr OR Bool-Expr .

    $default  reduce using rule 32 (Bool-Expr)


State 114

   34 Relation_And_Expr: Relation_Exprs AND Relation_And_Expr .

    $default  reduce using rule 34 (Relation_And_Expr)


State 115

   37 Relation_Expr: Expression Comp Expression .

    $default  reduce using rule 37 (Relation_Expr)


State 116

   47 Expression: Multiplicative-Expr ADD Expression .

    $default  reduce using rule 47 (Expression)


State 117

   48 Expression: Multiplicative-Expr SUB Expression .

    $default  reduce using rule 48 (Expression)


State 118

   50 Multiplicative-Expr: Term MULT Term .

    $default  reduce using rule 50 (Multiplicative-Expr)


State 119

   51 Multiplicative-Expr: Term DIV Term .

    $default  reduce using rule 51 (Multiplicative-Expr)


State 120

   52 Multiplicative-Expr: Term MOD Term .

    $default  reduce using rule 52 (Multiplicative-Expr)


State 121

   20 Statement: WHILE Bool-Expr BEGINLOOP Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 129


State 122

   21 Statement: DO BEGINLOOP Statement1 ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 130


State 123

   66 Var: identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (Var)


State 124

   62 Expression1: Expression COMMA Expression1 .

    $default  reduce using rule 62 (Expression1)


State 125

   57 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 57 (Term)


State 126

   58 Term: identifier L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 58 (Term)


State 127

   27 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF .

    $default  reduce using rule 27 (IF-STMT)


State 128

   28 IF-STMT: IF Bool-Expr THEN Statement1 ELSE . Statement1 ENDIF

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 13

    Statement1  go to state 131
    identifier  go to state 43
    Statement   go to state 44
    IF-STMT     go to state 45
    Var1        go to state 46
    Var         go to state 47


State 129

   20 Statement: WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP .

    $default  reduce using rule 20 (Statement)


State 130

   21 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE . Bool-Expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    NOT      shift, and go to state 51
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 53
    IDENT    shift, and go to state 13
    SUB      shift, and go to state 54

    identifier           go to state 55
    Bool-Expr            go to state 132
    Relation_And_Expr    go to state 57
    Relation_Exprs       go to state 58
    Relation_Expr        go to state 59
    Expression           go to state 60
    Multiplicative-Expr  go to state 61
    Term                 go to state 62
    Normal               go to state 63
    Var                  go to state 64


State 131

   28 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 . ENDIF

    ENDIF  shift, and go to state 133


State 132

   21 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 21 (Statement)


State 133

   28 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF .

    $default  reduce using rule 28 (IF-STMT)
