Terminals unused in grammar

   token


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 $@1: %empty

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY
    6         | error

    7 Declaration1: %empty
    8             | Declaration SEMICOLON Declaration1

    9 Declaration: Identifier COLON Type
   10            | error

   11 Statement1: Statement SEMICOLON Statement1
   12           | Statement SEMICOLON

   13 Identifier: IDENT
   14           | IDENT COMMA Identifier

   15 Type: INTEGER
   16     | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 Statement: Var1 ASSIGN Expression
   18          | IF-STMT
   19          | WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP
   20          | DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

   21 $@2: %empty

   22 Statement: READ $@2 Var1

   23 $@3: %empty

   24 Statement: WRITE $@3 Var1
   25          | CONTINUE
   26          | RETURN Expression
   27          | error

   28 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF
   29        | IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

   30 Var1: Var COMMA Var1
   31     | Var

   32 Bool-Expr: Relation_And_Expr

   33 $@4: %empty

   34 Bool-Expr: Relation_And_Expr OR $@4 Bool-Expr

   35 Relation_And_Expr: Relation_Exprs

   36 $@5: %empty

   37 Relation_And_Expr: Relation_Exprs AND $@5 Relation_And_Expr

   38 $@6: %empty

   39 Relation_Exprs: NOT $@6 Relation_Expr
   40               | Relation_Expr

   41 Relation_Expr: Expression Comp Expression
   42              | TRUE
   43              | FALSE
   44              | L_PAREN Bool-Expr R_PAREN

   45 Comp: EQ
   46     | NEQ
   47     | LT
   48     | GT
   49     | LTE
   50     | GTE

   51 $@7: %empty

   52 Expression: Multiplicative-Expr ADD $@7 Expression

   53 $@8: %empty

   54 Expression: Multiplicative-Expr SUB $@8 Expression
   55           | Multiplicative-Expr

   56 $@9: %empty

   57 Multiplicative-Expr: Term MULT $@9 Term

   58 $@10: %empty

   59 Multiplicative-Expr: Term DIV $@10 Term

   60 $@11: %empty

   61 Multiplicative-Expr: Term MOD $@11 Term
   62                    | Term

   63 Term: Normal
   64     | SUB Var
   65     | SUB NUMBER
   66     | SUB L_PAREN Expression R_PAREN
   67     | IDENT L_PAREN Expression1 R_PAREN

   68 Normal: Var
   69       | NUMBER
   70       | L_PAREN Expression1 R_PAREN

   71 Expression1: Expression COMMA Expression1
   72            | Expression
   73            | %empty

   74 Var: IDENT
   75    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 6 10 27
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_BODY (261) 5
token (262)
END_BODY (263) 5
BEGIN_LOCALS (264) 5
END_LOCALS (265) 5
INTEGER (266) 15 16
ARRAY (267) 16
OF (268) 16
IF (269) 28 29
THEN (270) 28 29
ENDIF (271) 28 29
ELSE (272) 29
WHILE (273) 19 20
DO (274) 20
BEGINLOOP (275) 19 20
ENDLOOP (276) 19 20
CONTINUE (277) 25
READ (278) 22
WRITE (279) 24
TRUE (280) 42
FALSE (281) 43
AND (282) 37
OR (283) 34
NOT (284) 39
SEMICOLON (285) 5 8 11 12
COLON (286) 9
COMMA (287) 14 30 71
L_PAREN (288) 44 66 67 70
R_PAREN (289) 44 66 67 70
L_SQUARE_BRACKET (290) 16 75
R_SQUARE_BRACKET (291) 16 75
ASSIGN (292) 17
RETURN (293) 26
NUMBER (294) 16 65 69
IDENT (295) 5 13 14 67 74 75
MULT (296) 57
DIV (297) 59
MOD (298) 61
ADD (299) 52
SUB (300) 54 64 65 66
LT (301) 47
LTE (302) 49
GT (303) 48
GTE (304) 50
EQ (305) 45
NEQ (306) 46


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
Function (55)
    on left: 5 6, on right: 3
$@1 (56)
    on left: 4, on right: 5
Declaration1 (57)
    on left: 7 8, on right: 5 8
Declaration (58)
    on left: 9 10, on right: 8
Statement1 (59)
    on left: 11 12, on right: 5 11 19 20 28 29
Identifier (60)
    on left: 13 14, on right: 9 14
Type (61)
    on left: 15 16, on right: 9
Statement (62)
    on left: 17 18 19 20 22 24 25 26 27, on right: 11 12
$@2 (63)
    on left: 21, on right: 22
$@3 (64)
    on left: 23, on right: 24
IF-STMT (65)
    on left: 28 29, on right: 18
Var1 (66)
    on left: 30 31, on right: 17 22 24 30
Bool-Expr (67)
    on left: 32 34, on right: 19 20 28 29 34 44
$@4 (68)
    on left: 33, on right: 34
Relation_And_Expr (69)
    on left: 35 37, on right: 32 34 37
$@5 (70)
    on left: 36, on right: 37
Relation_Exprs (71)
    on left: 39 40, on right: 35 37
$@6 (72)
    on left: 38, on right: 39
Relation_Expr (73)
    on left: 41 42 43 44, on right: 39 40
Comp (74)
    on left: 45 46 47 48 49 50, on right: 41
Expression (75)
    on left: 52 54 55, on right: 17 26 41 52 54 66 71 72 75
$@7 (76)
    on left: 51, on right: 52
$@8 (77)
    on left: 53, on right: 54
Multiplicative-Expr (78)
    on left: 57 59 61 62, on right: 52 54 55
$@9 (79)
    on left: 56, on right: 57
$@10 (80)
    on left: 58, on right: 59
$@11 (81)
    on left: 60, on right: 61
Term (82)
    on left: 63 64 65 66 67, on right: 57 59 61 62
Normal (83)
    on left: 68 69 70, on right: 63
Expression1 (84)
    on left: 71 72 73, on right: 67 70 71
Var (85)
    on left: 74 75, on right: 30 31 64 68


State 0

    0 $accept: . Program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Program    go to state 3
    Functions  go to state 4
    Function   go to state 5


State 1

    6 Function: error .

    $default  reduce using rule 6 (Function)


State 2

    5 Function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 4

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 5

    3 Functions: Function . Functions

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 5


State 6

    5 Function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 9

    5 Function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    SEMICOLON  shift, and go to state 10


State 10

    5 Function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 14
    Declaration   go to state 15
    Identifier    go to state 16


State 12

   10 Declaration: error .

    $default  reduce using rule 10 (Declaration)


State 13

   13 Identifier: IDENT .
   14           | IDENT . COMMA Identifier

    COMMA  shift, and go to state 17

    $default  reduce using rule 13 (Identifier)


State 14

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 . END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    8 Declaration1: Declaration . SEMICOLON Declaration1

    SEMICOLON  shift, and go to state 19


State 16

    9 Declaration: Identifier . COLON Type

    COLON  shift, and go to state 20


State 17

   14 Identifier: IDENT COMMA . Identifier

    IDENT  shift, and go to state 13

    Identifier  go to state 21


State 18

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS . BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 Declaration1: Declaration SEMICOLON . Declaration1

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_PARAMS  reduce using rule 7 (Declaration1)
    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 23
    Declaration   go to state 15
    Identifier    go to state 16


State 20

    9 Declaration: Identifier COLON . Type

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    Type  go to state 26


State 21

   14 Identifier: IDENT COMMA Identifier .

    $default  reduce using rule 14 (Identifier)


State 22

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS . Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY

    error  shift, and go to state 12
    IDENT  shift, and go to state 13

    END_LOCALS  reduce using rule 7 (Declaration1)

    Declaration1  go to state 27
    Declaration   go to state 15
    Identifier    go to state 16


State 23

    8 Declaration1: Declaration SEMICOLON Declaration1 .

    $default  reduce using rule 8 (Declaration1)


State 24

   15 Type: INTEGER .

    $default  reduce using rule 15 (Type)


State 25

   16 Type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

    9 Declaration: Identifier COLON Type .

    $default  reduce using rule 9 (Declaration)


State 27

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 . END_LOCALS BEGIN_BODY Statement1 END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   16 Type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS . BEGIN_BODY Statement1 END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY . Statement1 END_BODY

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1  go to state 42
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 32

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 47


State 33

   27 Statement: error .

    $default  reduce using rule 27 (Statement)


State 34

   28 IF-STMT: IF . Bool-Expr THEN Statement1 ENDIF
   29        | IF . Bool-Expr THEN Statement1 ELSE Statement1 ENDIF

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Bool-Expr            go to state 55
    Relation_And_Expr    go to state 56
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 35

   19 Statement: WHILE . Bool-Expr BEGINLOOP Statement1 ENDLOOP

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Bool-Expr            go to state 64
    Relation_And_Expr    go to state 56
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 36

   20 Statement: DO . BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 65


State 37

   25 Statement: CONTINUE .

    $default  reduce using rule 25 (Statement)


State 38

   22 Statement: READ . $@2 Var1

    $default  reduce using rule 21 ($@2)

    $@2  go to state 66


State 39

   24 Statement: WRITE . $@3 Var1

    $default  reduce using rule 23 ($@3)

    $@3  go to state 67


State 40

   26 Statement: RETURN . Expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 69
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 41

   74 Var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 74 (Var)


State 42

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 . END_BODY

    END_BODY  shift, and go to state 71


State 43

   11 Statement1: Statement . SEMICOLON Statement1
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 44

   18 Statement: IF-STMT .

    $default  reduce using rule 18 (Statement)


State 45

   17 Statement: Var1 . ASSIGN Expression

    ASSIGN  shift, and go to state 73


State 46

   30 Var1: Var . COMMA Var1
   31     | Var .

    COMMA  shift, and go to state 74

    $default  reduce using rule 31 (Var1)


State 47

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 75


State 48

   42 Relation_Expr: TRUE .

    $default  reduce using rule 42 (Relation_Expr)


State 49

   43 Relation_Expr: FALSE .

    $default  reduce using rule 43 (Relation_Expr)


State 50

   39 Relation_Exprs: NOT . $@6 Relation_Expr

    $default  reduce using rule 38 ($@6)

    $@6  go to state 76


State 51

   44 Relation_Expr: L_PAREN . Bool-Expr R_PAREN
   70 Normal: L_PAREN . Expression1 R_PAREN

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    $default  reduce using rule 73 (Expression1)

    Bool-Expr            go to state 77
    Relation_And_Expr    go to state 56
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 78
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Expression1          go to state 79
    Var                  go to state 63


State 52

   69 Normal: NUMBER .

    $default  reduce using rule 69 (Normal)


State 53

   67 Term: IDENT . L_PAREN Expression1 R_PAREN
   74 Var: IDENT .
   75    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 74 (Var)


State 54

   64 Term: SUB . Var
   65     | SUB . NUMBER
   66     | SUB . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 81
    NUMBER   shift, and go to state 82
    IDENT    shift, and go to state 41

    Var  go to state 83


State 55

   28 IF-STMT: IF Bool-Expr . THEN Statement1 ENDIF
   29        | IF Bool-Expr . THEN Statement1 ELSE Statement1 ENDIF

    THEN  shift, and go to state 84


State 56

   32 Bool-Expr: Relation_And_Expr .
   34          | Relation_And_Expr . OR $@4 Bool-Expr

    OR  shift, and go to state 85

    $default  reduce using rule 32 (Bool-Expr)


State 57

   35 Relation_And_Expr: Relation_Exprs .
   37                  | Relation_Exprs . AND $@5 Relation_And_Expr

    AND  shift, and go to state 86

    $default  reduce using rule 35 (Relation_And_Expr)


State 58

   40 Relation_Exprs: Relation_Expr .

    $default  reduce using rule 40 (Relation_Exprs)


State 59

   41 Relation_Expr: Expression . Comp Expression

    LT   shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    GTE  shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92

    Comp  go to state 93


State 60

   52 Expression: Multiplicative-Expr . ADD $@7 Expression
   54           | Multiplicative-Expr . SUB $@8 Expression
   55           | Multiplicative-Expr .

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 55 (Expression)


State 61

   57 Multiplicative-Expr: Term . MULT $@9 Term
   59                    | Term . DIV $@10 Term
   61                    | Term . MOD $@11 Term
   62                    | Term .

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 62 (Multiplicative-Expr)


State 62

   63 Term: Normal .

    $default  reduce using rule 63 (Term)


State 63

   68 Normal: Var .

    $default  reduce using rule 68 (Normal)


State 64

   19 Statement: WHILE Bool-Expr . BEGINLOOP Statement1 ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 65

   20 Statement: DO BEGINLOOP . Statement1 ENDLOOP WHILE Bool-Expr

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1  go to state 100
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 66

   22 Statement: READ $@2 . Var1

    IDENT  shift, and go to state 41

    Var1  go to state 101
    Var   go to state 46


State 67

   24 Statement: WRITE $@3 . Var1

    IDENT  shift, and go to state 41

    Var1  go to state 102
    Var   go to state 46


State 68

   70 Normal: L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    $default  reduce using rule 73 (Expression1)

    Expression           go to state 103
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Expression1          go to state 79
    Var                  go to state 63


State 69

   26 Statement: RETURN Expression .

    $default  reduce using rule 26 (Statement)


State 70

   75 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 104
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 71

    5 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Declaration1 END_PARAMS BEGIN_LOCALS Declaration1 END_LOCALS BEGIN_BODY Statement1 END_BODY .

    $default  reduce using rule 5 (Function)


State 72

   11 Statement1: Statement SEMICOLON . Statement1
   12           | Statement SEMICOLON .

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    END_BODY  reduce using rule 12 (Statement1)
    ENDIF     reduce using rule 12 (Statement1)
    ELSE      reduce using rule 12 (Statement1)
    ENDLOOP   reduce using rule 12 (Statement1)

    Statement1  go to state 105
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 73

   17 Statement: Var1 ASSIGN . Expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 106
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 74

   30 Var1: Var COMMA . Var1

    IDENT  shift, and go to state 41

    Var1  go to state 107
    Var   go to state 46


State 75

   16 Type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (Type)


State 76

   39 Relation_Exprs: NOT $@6 . Relation_Expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Relation_Expr        go to state 108
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 77

   44 Relation_Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 109


State 78

   41 Relation_Expr: Expression . Comp Expression
   71 Expression1: Expression . COMMA Expression1
   72            | Expression .

    COMMA  shift, and go to state 110
    LT     shift, and go to state 87
    LTE    shift, and go to state 88
    GT     shift, and go to state 89
    GTE    shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92

    $default  reduce using rule 72 (Expression1)

    Comp  go to state 93


State 79

   70 Normal: L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 111


State 80

   67 Term: IDENT L_PAREN . Expression1 R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    $default  reduce using rule 73 (Expression1)

    Expression           go to state 103
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Expression1          go to state 112
    Var                  go to state 63


State 81

   66 Term: SUB L_PAREN . Expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 113
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 82

   65 Term: SUB NUMBER .

    $default  reduce using rule 65 (Term)


State 83

   64 Term: SUB Var .

    $default  reduce using rule 64 (Term)


State 84

   28 IF-STMT: IF Bool-Expr THEN . Statement1 ENDIF
   29        | IF Bool-Expr THEN . Statement1 ELSE Statement1 ENDIF

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1  go to state 114
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 85

   34 Bool-Expr: Relation_And_Expr OR . $@4 Bool-Expr

    $default  reduce using rule 33 ($@4)

    $@4  go to state 115


State 86

   37 Relation_And_Expr: Relation_Exprs AND . $@5 Relation_And_Expr

    $default  reduce using rule 36 ($@5)

    $@5  go to state 116


State 87

   47 Comp: LT .

    $default  reduce using rule 47 (Comp)


State 88

   49 Comp: LTE .

    $default  reduce using rule 49 (Comp)


State 89

   48 Comp: GT .

    $default  reduce using rule 48 (Comp)


State 90

   50 Comp: GTE .

    $default  reduce using rule 50 (Comp)


State 91

   45 Comp: EQ .

    $default  reduce using rule 45 (Comp)


State 92

   46 Comp: NEQ .

    $default  reduce using rule 46 (Comp)


State 93

   41 Relation_Expr: Expression Comp . Expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 117
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 94

   52 Expression: Multiplicative-Expr ADD . $@7 Expression

    $default  reduce using rule 51 ($@7)

    $@7  go to state 118


State 95

   54 Expression: Multiplicative-Expr SUB . $@8 Expression

    $default  reduce using rule 53 ($@8)

    $@8  go to state 119


State 96

   57 Multiplicative-Expr: Term MULT . $@9 Term

    $default  reduce using rule 56 ($@9)

    $@9  go to state 120


State 97

   59 Multiplicative-Expr: Term DIV . $@10 Term

    $default  reduce using rule 58 ($@10)

    $@10  go to state 121


State 98

   61 Multiplicative-Expr: Term MOD . $@11 Term

    $default  reduce using rule 60 ($@11)

    $@11  go to state 122


State 99

   19 Statement: WHILE Bool-Expr BEGINLOOP . Statement1 ENDLOOP

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1  go to state 123
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 100

   20 Statement: DO BEGINLOOP Statement1 . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 124


State 101

   22 Statement: READ $@2 Var1 .

    $default  reduce using rule 22 (Statement)


State 102

   24 Statement: WRITE $@3 Var1 .

    $default  reduce using rule 24 (Statement)


State 103

   71 Expression1: Expression . COMMA Expression1
   72            | Expression .

    COMMA  shift, and go to state 110

    $default  reduce using rule 72 (Expression1)


State 104

   75 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125


State 105

   11 Statement1: Statement SEMICOLON Statement1 .

    $default  reduce using rule 11 (Statement1)


State 106

   17 Statement: Var1 ASSIGN Expression .

    $default  reduce using rule 17 (Statement)


State 107

   30 Var1: Var COMMA Var1 .

    $default  reduce using rule 30 (Var1)


State 108

   39 Relation_Exprs: NOT $@6 Relation_Expr .

    $default  reduce using rule 39 (Relation_Exprs)


State 109

   44 Relation_Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 44 (Relation_Expr)


State 110

   71 Expression1: Expression COMMA . Expression1

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    $default  reduce using rule 73 (Expression1)

    Expression           go to state 103
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Expression1          go to state 126
    Var                  go to state 63


State 111

   70 Normal: L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 70 (Normal)


State 112

   67 Term: IDENT L_PAREN Expression1 . R_PAREN

    R_PAREN  shift, and go to state 127


State 113

   66 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 114

   28 IF-STMT: IF Bool-Expr THEN Statement1 . ENDIF
   29        | IF Bool-Expr THEN Statement1 . ELSE Statement1 ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 115

   34 Bool-Expr: Relation_And_Expr OR $@4 . Bool-Expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Bool-Expr            go to state 131
    Relation_And_Expr    go to state 56
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 116

   37 Relation_And_Expr: Relation_Exprs AND $@5 . Relation_And_Expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Relation_And_Expr    go to state 132
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 117

   41 Relation_Expr: Expression Comp Expression .

    $default  reduce using rule 41 (Relation_Expr)


State 118

   52 Expression: Multiplicative-Expr ADD $@7 . Expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 133
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 119

   54 Expression: Multiplicative-Expr SUB $@8 . Expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Expression           go to state 134
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 120

   57 Multiplicative-Expr: Term MULT $@9 . Term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Term    go to state 135
    Normal  go to state 62
    Var     go to state 63


State 121

   59 Multiplicative-Expr: Term DIV $@10 . Term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Term    go to state 136
    Normal  go to state 62
    Var     go to state 63


State 122

   61 Multiplicative-Expr: Term MOD $@11 . Term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Term    go to state 137
    Normal  go to state 62
    Var     go to state 63


State 123

   19 Statement: WHILE Bool-Expr BEGINLOOP Statement1 . ENDLOOP

    ENDLOOP  shift, and go to state 138


State 124

   20 Statement: DO BEGINLOOP Statement1 ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 139


State 125

   75 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 75 (Var)


State 126

   71 Expression1: Expression COMMA Expression1 .

    $default  reduce using rule 71 (Expression1)


State 127

   67 Term: IDENT L_PAREN Expression1 R_PAREN .

    $default  reduce using rule 67 (Term)


State 128

   66 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 66 (Term)


State 129

   28 IF-STMT: IF Bool-Expr THEN Statement1 ENDIF .

    $default  reduce using rule 28 (IF-STMT)


State 130

   29 IF-STMT: IF Bool-Expr THEN Statement1 ELSE . Statement1 ENDIF

    error     shift, and go to state 33
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    Statement1  go to state 140
    Statement   go to state 43
    IF-STMT     go to state 44
    Var1        go to state 45
    Var         go to state 46


State 131

   34 Bool-Expr: Relation_And_Expr OR $@4 Bool-Expr .

    $default  reduce using rule 34 (Bool-Expr)


State 132

   37 Relation_And_Expr: Relation_Exprs AND $@5 Relation_And_Expr .

    $default  reduce using rule 37 (Relation_And_Expr)


State 133

   52 Expression: Multiplicative-Expr ADD $@7 Expression .

    $default  reduce using rule 52 (Expression)


State 134

   54 Expression: Multiplicative-Expr SUB $@8 Expression .

    $default  reduce using rule 54 (Expression)


State 135

   57 Multiplicative-Expr: Term MULT $@9 Term .

    $default  reduce using rule 57 (Multiplicative-Expr)


State 136

   59 Multiplicative-Expr: Term DIV $@10 Term .

    $default  reduce using rule 59 (Multiplicative-Expr)


State 137

   61 Multiplicative-Expr: Term MOD $@11 Term .

    $default  reduce using rule 61 (Multiplicative-Expr)


State 138

   19 Statement: WHILE Bool-Expr BEGINLOOP Statement1 ENDLOOP .

    $default  reduce using rule 19 (Statement)


State 139

   20 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE . Bool-Expr

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    NOT      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53
    SUB      shift, and go to state 54

    Bool-Expr            go to state 141
    Relation_And_Expr    go to state 56
    Relation_Exprs       go to state 57
    Relation_Expr        go to state 58
    Expression           go to state 59
    Multiplicative-Expr  go to state 60
    Term                 go to state 61
    Normal               go to state 62
    Var                  go to state 63


State 140

   29 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 . ENDIF

    ENDIF  shift, and go to state 142


State 141

   20 Statement: DO BEGINLOOP Statement1 ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 20 (Statement)


State 142

   29 IF-STMT: IF Bool-Expr THEN Statement1 ELSE Statement1 ENDIF .

    $default  reduce using rule 29 (IF-STMT)
